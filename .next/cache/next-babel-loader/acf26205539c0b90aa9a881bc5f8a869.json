{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nconst Countdown = props => {\n  const {\n    0: timeRemaining,\n    1: setTimeRemaining\n  } = useState({\n    minutes: 25,\n    seconds: 0\n  });\n\n  const startTimer = (minutes, seconds) => {\n    let counterInterval = setInterval(() => {\n      let {\n        seconds,\n        minutes\n      } = timeRemaining;\n      console.log('hello');\n      setTimeRemaining({\n        minutes: --minutes,\n        seconds: --seconds\n      });\n    }, 1000);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    onClick: startTimer(timeRemaining),\n    className: \"jsx-4003937642\" + \" \" + \"countdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, timeRemaining.minutes, \":\", timeRemaining.seconds == 0 ? '00' : timeRemaining.seconds < 10 ? '0' + timeRemaining : timeRemaining.seconds), __jsx(\"section\", {\n    className: \"jsx-4003937642\" + \" \" + \"countdown-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"4003937642\",\n    __self: this\n  }, \".jsx-4003937642{display:inline-block;width:100%;text-align:center;font-size:7rem;font-weight:500;}.countdown-controls.jsx-4003937642{height:50px;width:100%;border-radius:100px;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL0NvdW50ZG93bi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFtQ3dCLEFBRXNDLEFBTUwsWUFDRCxTQU5KLEVBT2EsU0FOTixXQU9HLE9BTk4sVUFPZixLQU5nQixnQkFPcEIiLCJmaWxlIjoiL1VzZXJzL2d1aWRvbGFyb3NhL0RvY3VtZW50cy9XRUJERVYvUHJvZ3Jlc3NUcmFja2VyL2NvbXBvbmVudHMvQ291bnRkb3duLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IENvdW50ZG93biA9IHByb3BzID0+IHtcblxuY29uc3QgWyB0aW1lUmVtYWluaW5nLCBzZXRUaW1lUmVtYWluaW5nIF0gPSB1c2VTdGF0ZSh7XG4gICAgbWludXRlczogMjUsXG4gICAgc2Vjb25kczogMFxufSlcbiAgICBjb25zdCBzdGFydFRpbWVyID0gKG1pbnV0ZXMsIHNlY29uZHMpID0+IHtcbiAgICAgICAgbGV0IGNvdW50ZXJJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIGxldCB7IHNlY29uZHMsIG1pbnV0ZXMgfSA9IHRpbWVSZW1haW5pbmc7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnaGVsbG8nKVxuICAgICAgICAgICAgc2V0VGltZVJlbWFpbmluZyh7XG4gICAgICAgICAgICAgICAgbWludXRlczogLS1taW51dGVzLFxuICAgICAgICAgICAgICAgIHNlY29uZHM6IC0tc2Vjb25kc1xuICAgICAgICAgICAgfSlcbiAgICAgICAgfSwgMTAwMClcbiAgICB9XG4gICAgcmV0dXJuIChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxzcGFuIFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvdW50ZG93blwiIFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9eyhzdGFydFRpbWVyKHRpbWVSZW1haW5pbmcpKX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dGltZVJlbWFpbmluZy5taW51dGVzfTp7XG4gICAgICAgICAgICAgICAgICAgIHRpbWVSZW1haW5pbmcuc2Vjb25kcyA9PSAwID9cbiAgICAgICAgICAgICAgICAgICAgICAgICcwMCcgOlxuICAgICAgICAgICAgICAgICAgICAgICAgdGltZVJlbWFpbmluZy5zZWNvbmRzIDwgMTAgP1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICcwJyArIHRpbWVSZW1haW5pbmcgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aW1lUmVtYWluaW5nLnNlY29uZHNcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiY291bnRkb3duLWNvbnRyb2xzXCI+XG5cbiAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogN3JlbTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICAgICAgICAgIC5jb3VudGRvd24tY29udHJvbHMge1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8Lz5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IENvdW50ZG93bjsiXX0= */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js */\"));\n};\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js"],"names":["useState","Countdown","props","timeRemaining","setTimeRemaining","minutes","seconds","startTimer","counterInterval","setInterval","console","log"],"mappings":";;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAE3B,QAAM;AAAA,OAAEC,aAAF;AAAA,OAAiBC;AAAjB,MAAsCJ,QAAQ,CAAC;AACjDK,IAAAA,OAAO,EAAE,EADwC;AAEjDC,IAAAA,OAAO,EAAE;AAFwC,GAAD,CAApD;;AAII,QAAMC,UAAU,GAAG,CAACF,OAAD,EAAUC,OAAV,KAAsB;AACrC,QAAIE,eAAe,GAAGC,WAAW,CAAC,MAAM;AACpC,UAAI;AAAEH,QAAAA,OAAF;AAAWD,QAAAA;AAAX,UAAuBF,aAA3B;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAP,MAAAA,gBAAgB,CAAC;AACbC,QAAAA,OAAO,EAAE,EAAEA,OADE;AAEbC,QAAAA,OAAO,EAAE,EAAEA;AAFE,OAAD,CAAhB;AAIH,KAPgC,EAO9B,IAP8B,CAAjC;AAQH,GATD;;AAUA,SACI,4BACI;AAEI,IAAA,OAAO,EAAGC,UAAU,CAACJ,aAAD,CAFxB;AAAA,wCACc,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKA,aAAa,CAACE,OAJnB,OAKQF,aAAa,CAACG,OAAd,IAAyB,CAAzB,GACI,IADJ,GAEIH,aAAa,CAACG,OAAd,GAAwB,EAAxB,GACI,MAAMH,aADV,GAEQA,aAAa,CAACG,OATlC,CADJ,EAaI;AAAA,wCAAmB,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ;AAAA;AAAA;AAAA,sxFADJ;AAgCH,CAhDD;;AAkDA,eAAeL,SAAf","sourcesContent":["import { useState } from 'react';\n\nconst Countdown = props => {\n\nconst [ timeRemaining, setTimeRemaining ] = useState({\n    minutes: 25,\n    seconds: 0\n})\n    const startTimer = (minutes, seconds) => {\n        let counterInterval = setInterval(() => {\n            let { seconds, minutes } = timeRemaining;\n            console.log('hello')\n            setTimeRemaining({\n                minutes: --minutes,\n                seconds: --seconds\n            })\n        }, 1000)\n    }\n    return (\n        <>\n            <span \n                className=\"countdown\" \n                onClick={(startTimer(timeRemaining))}\n            >\n                {timeRemaining.minutes}:{\n                    timeRemaining.seconds == 0 ?\n                        '00' :\n                        timeRemaining.seconds < 10 ?\n                            '0' + timeRemaining :\n                                timeRemaining.seconds\n                    }\n            </span>\n            <section className=\"countdown-controls\">\n\n            </section>\n            <style jsx>{`\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                font-size: 7rem;\n                font-weight: 500;\n                .countdown-controls {\n                    height: 50px;\n                    width: 100%;\n                    border-radius: 100px;\n                    background: white;\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}