{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getBlack, getPallete } from './../theme/colors';\nimport Moment from 'react-moment';\n\nconst DetailsPanel = props => {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const today = new Date();\n\n  const turnDaysIntoArray = month => {\n    const days = [];\n    const totalDays = daysInMonth(month, today.getFullYear());\n\n    for (let i = 1; i <= totalDays; i++) {\n      days.push(i);\n    }\n\n    return days;\n  };\n\n  const daysInMonth = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n\n  const formatDate = date => {\n    let month = date.getMonth();\n    let day = date.getDate();\n    let year = date.getFullYear();\n    let weekday = date.getDay();\n    return `${weekday} ${day} ${months[month]} ${year}`;\n  };\n\n  return __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"3130255120\", [getBlack(0.8), getBlack(.5), getPallete('green')]]]) + \" \" + \"details-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"3130255120\", [getBlack(0.8), getBlack(.5), getPallete('green')]]]) + \" \" + \"dropdown-title-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Months\"), __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"3130255120\", [getBlack(0.8), getBlack(.5), getPallete('green')]]]) + \" \" + \"months-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, months.map((month, monthIndex) => {\n    return __jsx(\"section\", {\n      key: monthIndex,\n      className: _JSXStyle.dynamic([[\"3130255120\", [getBlack(0.8), getBlack(.5), getPallete('green')]]]) + \" \" + \"month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, __jsx(\"h3\", {\n      className: _JSXStyle.dynamic([[\"3130255120\", [getBlack(0.8), getBlack(.5), getPallete('green')]]]) + \" \" + \"month-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, month), __jsx(\"section\", {\n      className: _JSXStyle.dynamic([[\"3130255120\", [getBlack(0.8), getBlack(.5), getPallete('green')]]]) + \" \" + \"day-progress-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, turnDaysIntoArray(monthIndex).map(day => {\n      return __jsx(\"section\", {\n        title: formatDate(new Date(today.getFullYear(), monthIndex, day)),\n        className: _JSXStyle.dynamic([[\"3130255120\", [getBlack(0.8), getBlack(.5), getPallete('green')]]]) + \" \" + \"day-indicator empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      });\n    })));\n  })), __jsx(_JSXStyle, {\n    id: \"3130255120\",\n    dynamic: [getBlack(0.8), getBlack(.5), getPallete('green')],\n    __self: this\n  }, `.details-panel.__jsx-style-dynamic-selector{padding:20px;background:white;grid-area:details;border-radius:10px;position:relative;}.details-panel.__jsx-style-dynamic-selector::before{content:'';position:absolute;width:100%;background:white;height:30px;opacity:1;bottom:10px;left:0;background:linear-gradient(rgba(0,0,0,0),white);z-index:1;}.details-panel.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{color:${getBlack(0.8)};}.months-container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;overflow-y:auto;height:95%;padding-right:5px;margin-top:5px;}.months-container.__jsx-style-dynamic-selector::-webkit-scrollbar{background:white;border:0;width:5px;}.months-container.__jsx-style-dynamic-selector::-webkit-scrollbar-thumb{background:lightgray;border-radius:10px;}.months-container.__jsx-style-dynamic-selector .month.__jsx-style-dynamic-selector{width:47%;margin-bottom:20px;}.months-container.__jsx-style-dynamic-selector .month.__jsx-style-dynamic-selector .month-name.__jsx-style-dynamic-selector{font-weight:500;color:${getBlack(.5)};}.day-progress-container.__jsx-style-dynamic-selector{display:grid;grid-template-columns:repeat(7,7fr);grid-template-rows:repeat(5,auto);-webkit-column-gap:10px;column-gap:10px;row-gap:5px;}.day-progress-container.__jsx-style-dynamic-selector .day-indicator.__jsx-style-dynamic-selector{background-color:${getPallete('green')};width:100%;height:1.4vw;border-radius:100px;cursor:pointer;-webkit-transition:.1s ease-in-out -webkit-transform;-webkit-transition:.1s ease-in-out transform;transition:.1s ease-in-out transform;}.day-progress-container.__jsx-style-dynamic-selector .day-indicator.__jsx-style-dynamic-selector:hover{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9);}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL0RldGFpbHNQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RXdCLEFBR2tDLEFBT0YsQUFZd0IsQUFHdEIsQUFTSSxBQUtJLEFBSVgsQUFJTSxBQUlILEFBT2lDLEFBUTFCLFVBdEJELENBakNELEVBUEQsQUFnRG9CLEdBSDFDLENBZGMsSUFLVSxLQUpULEdBeEJDLEFBaUNmLENBeENzQixLQWtCdEIsQ0FjQSxJQXhCcUIsQUE0QnJCLE1Ba0JlLEVBckRRLENBK0NnQixFQUp2QyxNQW5DZ0IsQUE4Q0MsVUFyREssRUFRUixDQThDVSxFQU14QixFQXpDa0MsS0FWbEIsSUFzQ0ksRUE5Q3BCLEtBc0RtQixDQTdDUixPQUMwQyxPQTZDWixrQkFSekIsWUFDaEIsV0FyQ2MsVUFDZCxpQ0FPbUIsbURBcUNuQixNQXBDb0IsZ0JBQ0wsV0FDTyxrQkFDSCxlQUNuQiIsImZpbGUiOiIvVXNlcnMvZ3VpZG9sYXJvc2EvRG9jdW1lbnRzL1dFQkRFVi9Qcm9ncmVzc1RyYWNrZXIvY29tcG9uZW50cy9EZXRhaWxzUGFuZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRCbGFjaywgZ2V0UGFsbGV0ZSB9IGZyb20gJy4vLi4vdGhlbWUvY29sb3JzJztcbmltcG9ydCBNb21lbnQgZnJvbSAncmVhY3QtbW9tZW50JztcblxuY29uc3QgRGV0YWlsc1BhbmVsID0gcHJvcHMgPT4ge1xuICAgIGNvbnN0IG1vbnRocyA9IFtcbiAgICAgICAgJ0phbnVhcnknLFxuICAgICAgICAnRmVicnVhcnknLFxuICAgICAgICAnTWFyY2gnLFxuICAgICAgICAnQXByaWwnLFxuICAgICAgICAnTWF5JyxcbiAgICAgICAgJ0p1bmUnLFxuICAgICAgICAnSnVseScsXG4gICAgICAgICdBdWd1c3QnLFxuICAgICAgICAnU2VwdGVtYmVyJyxcbiAgICAgICAgJ09jdG9iZXInLFxuICAgICAgICAnTm92ZW1iZXInLFxuICAgICAgICAnRGVjZW1iZXInXG4gICAgXTtcblxuICAgIGNvbnN0IHdlZWtkYXlzID0gW1xuICAgICAgICAnTW9uZGF5JyxcbiAgICAgICAgJ1R1ZXNkYXknLFxuICAgICAgICAnV2VkbmVzZGF5JyxcbiAgICAgICAgJ1RodXJzZGF5JyxcbiAgICAgICAgJ0ZyaWRheScsXG4gICAgICAgICdTYXR1cmRheScsXG4gICAgICAgICdTdW5kYXknXG4gICAgXVxuXG4gICAgY29uc3QgdG9kYXkgPSBuZXcgRGF0ZSgpO1xuXG4gICAgY29uc3QgdHVybkRheXNJbnRvQXJyYXkgPSAobW9udGgpID0+IHtcbiAgICAgICAgY29uc3QgZGF5cyA9IFtdO1xuICAgICAgICBjb25zdCB0b3RhbERheXMgPSBkYXlzSW5Nb250aChtb250aCwgdG9kYXkuZ2V0RnVsbFllYXIoKSk7XG4gICAgICAgIGZvciAobGV0IGkgPSAxOyBpIDw9IHRvdGFsRGF5czsgaSsrKSB7XG4gICAgICAgICAgICBkYXlzLnB1c2goaSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGRheXM7XG4gICAgfVxuXG4gICAgY29uc3QgZGF5c0luTW9udGggPSAobW9udGgsIHllYXIpID0+IHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKHllYXIsIG1vbnRoLCAwKS5nZXREYXRlKCk7XG4gICAgfVxuXG4gICAgY29uc3QgZm9ybWF0RGF0ZSA9IGRhdGUgPT4ge1xuICAgICAgICBsZXQgbW9udGggPSBkYXRlLmdldE1vbnRoKCk7XG4gICAgICAgIGxldCBkYXkgPSBkYXRlLmdldERhdGUoKTtcbiAgICAgICAgbGV0IHllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7XG4gICAgICAgIGxldCB3ZWVrZGF5ID0gZGF0ZS5nZXREYXkoKTtcbiAgICAgICAgcmV0dXJuIGAke3dlZWtkYXl9ICR7ZGF5fSAke21vbnRoc1ttb250aF19ICR7eWVhcn1gO1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImRldGFpbHMtcGFuZWxcIj5cbiAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJkcm9wZG93bi10aXRsZS1zZWxlY3RvclwiPk1vbnRoczwvaDI+XG4gICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJtb250aHMtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAge21vbnRocy5tYXAoKG1vbnRoLCBtb250aEluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJtb250aFwiIGtleT17bW9udGhJbmRleH0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGgzIGNsYXNzTmFtZT1cIm1vbnRoLW5hbWVcIj57bW9udGh9PC9oMz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJkYXktcHJvZ3Jlc3MtY29udGFpbmVyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0dXJuRGF5c0ludG9BcnJheShtb250aEluZGV4KS5tYXAoKGRheSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c2VjdGlvbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGl0bGU9e2Zvcm1hdERhdGUobmV3IERhdGUodG9kYXkuZ2V0RnVsbFllYXIoKSwgbW9udGhJbmRleCwgZGF5KSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImRheS1pbmRpY2F0b3IgZW1wdHlcIj48L3NlY3Rpb24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgIH0pfVxuICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC5kZXRhaWxzLXBhbmVsIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogZGV0YWlscztcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuZGV0YWlscy1wYW5lbDo6YmVmb3JlIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudDogJyc7XG4gICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgICAgIGJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHJnYmEoMCwwLDAsMCksIHdoaXRlKTtcbiAgICAgICAgICAgICAgICAgICAgei1pbmRleDogMTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmRldGFpbHMtcGFuZWwgaDIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJHtnZXRCbGFjaygwLjgpfTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1vbnRocy1jb250YWluZXIge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICAgICAgICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICAgICAgICAgICAgICAgICAgb3ZlcmZsb3cteTogYXV0bztcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA5NSU7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmctcmlnaHQ6IDVweDtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXRvcDogNXB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAubW9udGhzLWNvbnRhaW5lcjo6LXdlYmtpdC1zY3JvbGxiYXIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiAwO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogNXB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAubW9udGhzLWNvbnRhaW5lcjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaWdodGdyYXk7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tb250aHMtY29udGFpbmVyIC5tb250aCB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA0NyU7XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tb250aHMtY29udGFpbmVyIC5tb250aCAubW9udGgtbmFtZSB7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAke2dldEJsYWNrKC41KX1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmRheS1wcm9ncmVzcy1jb250YWluZXIge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg3LCA3ZnIpO1xuICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg1LCBhdXRvKTtcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uLWdhcDogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgcm93LWdhcDogNXB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuZGF5LXByb2dyZXNzLWNvbnRhaW5lciAuZGF5LWluZGljYXRvciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0UGFsbGV0ZSgnZ3JlZW4nKX07XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEuNHZ3O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAuMXMgZWFzZS1pbi1vdXQgdHJhbnNmb3JtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuZGF5LXByb2dyZXNzLWNvbnRhaW5lciAuZGF5LWluZGljYXRvcjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoLjkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgRGV0YWlsc1BhbmVsOyJdfQ== */\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js */`));\n};\n\nexport default DetailsPanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js"],"names":["getBlack","getPallete","Moment","DetailsPanel","props","months","weekdays","today","Date","turnDaysIntoArray","month","days","totalDays","daysInMonth","getFullYear","i","push","year","getDate","formatDate","date","getMonth","day","weekday","getDay","map","monthIndex"],"mappings":"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","sourcesContent":["import { getBlack, getPallete } from './../theme/colors';\nimport Moment from 'react-moment';\n\nconst DetailsPanel = props => {\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ];\n\n    const weekdays = [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n    ]\n\n    const today = new Date();\n\n    const turnDaysIntoArray = (month) => {\n        const days = [];\n        const totalDays = daysInMonth(month, today.getFullYear());\n        for (let i = 1; i <= totalDays; i++) {\n            days.push(i);\n        }\n        return days;\n    }\n\n    const daysInMonth = (month, year) => {\n        return new Date(year, month, 0).getDate();\n    }\n\n    const formatDate = date => {\n        let month = date.getMonth();\n        let day = date.getDate();\n        let year = date.getFullYear();\n        let weekday = date.getDay();\n        return `${weekday} ${day} ${months[month]} ${year}`;\n    }\n\n    return (\n        <section className=\"details-panel\">\n            <h2 className=\"dropdown-title-selector\">Months</h2>\n            <section className=\"months-container\">\n                {months.map((month, monthIndex) => {\n                    return (\n                        <section className=\"month\" key={monthIndex}>\n                            <h3 className=\"month-name\">{month}</h3>\n                            <section className=\"day-progress-container\">\n                                {turnDaysIntoArray(monthIndex).map((day) => {\n                                    return (\n                                        <section \n                                            title={formatDate(new Date(today.getFullYear(), monthIndex, day))}\n                                            className=\"day-indicator empty\"></section>\n                                    )\n                                })}\n                            </section>\n                        </section>\n                    )\n                })}\n            </section>\n            <style jsx>{`\n                .details-panel {\n                    padding: 20px;\n                    background: white;\n                    grid-area: details;\n                    border-radius: 10px;\n                    position: relative;\n                }\n                .details-panel::before {\n                    content: '';\n                    position: absolute;\n                    width: 100%;\n                    background: white;\n                    height: 30px;\n                    opacity: 1;\n                    bottom: 10px;\n                    left: 0;\n                    background: linear-gradient(rgba(0,0,0,0), white);\n                    z-index: 1;\n                }\n                .details-panel h2 {\n                    color: ${getBlack(0.8)};\n                }\n                .months-container {\n                    display: flex;\n                    justify-content: space-between;\n                    flex-wrap: wrap;\n                    overflow-y: auto;\n                    height: 95%;\n                    padding-right: 5px;\n                    margin-top: 5px;\n                }\n                .months-container::-webkit-scrollbar {\n                    background: white;\n                    border: 0;\n                    width: 5px;\n                }\n                .months-container::-webkit-scrollbar-thumb {\n                    background: lightgray;\n                    border-radius: 10px;\n                }\n                .months-container .month {\n                    width: 47%;\n                    margin-bottom: 20px;\n                }\n                .months-container .month .month-name {\n                    font-weight: 500;\n                    color: ${getBlack(.5)}\n                }\n                .day-progress-container {\n                    display: grid;\n                    grid-template-columns: repeat(7, 7fr);\n                    grid-template-rows: repeat(5, auto);\n                    column-gap: 10px;\n                    row-gap: 5px;\n                }\n                .day-progress-container .day-indicator {\n                    background-color: ${getPallete('green')};\n                    width: 100%;\n                    height: 1.4vw;\n                    border-radius: 100px;\n                    cursor: pointer;\n                    transition: .1s ease-in-out transform;\n                }\n                .day-progress-container .day-indicator:hover {\n                    transform: scale(.9);\n                }\n            `}</style>\n        </section>\n    )\n}\n\nexport default DetailsPanel;"]},"metadata":{},"sourceType":"module"}