{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nvar Countdown = function Countdown(props) {\n  var _useState = useState({\n    minutes: 25,\n    seconds: 0\n  }),\n      timeRemaining = _useState[0],\n      setTimeRemaining = _useState[1];\n\n  var startTimer = function startTimer(minutes, seconds) {\n    var counterInterval = setInterval(function () {\n      var seconds = timeRemaining.seconds,\n          minutes = timeRemaining.minutes;\n      setTimeRemaining({\n        seconds: --seconds\n      });\n    }, 1000);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    onClick: startTimer(timeRemaining),\n    className: \"jsx-4003937642\" + \" \" + \"countdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, timeRemaining.minutes, \":\", timeRemaining.seconds == 0 ? '00' : timeRemaining.seconds < 10 ? '0' + timeRemaining : timeRemaining.seconds), __jsx(\"section\", {\n    className: \"jsx-4003937642\" + \" \" + \"countdown-controls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"4003937642\",\n    __self: _this\n  }, \".jsx-4003937642{display:inline-block;width:100%;text-align:center;font-size:7rem;font-weight:500;}.countdown-controls.jsx-4003937642{height:50px;width:100%;border-radius:100px;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL0NvdW50ZG93bi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQ3dCLEFBRXNDLEFBTUwsWUFDRCxTQU5KLEVBT2EsU0FOTixXQU9HLE9BTk4sVUFPZixLQU5nQixnQkFPcEIiLCJmaWxlIjoiL1VzZXJzL2d1aWRvbGFyb3NhL0RvY3VtZW50cy9XRUJERVYvUHJvZ3Jlc3NUcmFja2VyL2NvbXBvbmVudHMvQ291bnRkb3duLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IENvdW50ZG93biA9IHByb3BzID0+IHtcblxuY29uc3QgWyB0aW1lUmVtYWluaW5nLCBzZXRUaW1lUmVtYWluaW5nIF0gPSB1c2VTdGF0ZSh7XG4gICAgbWludXRlczogMjUsXG4gICAgc2Vjb25kczogMFxufSlcbiAgICBjb25zdCBzdGFydFRpbWVyID0gKG1pbnV0ZXMsIHNlY29uZHMpID0+IHtcbiAgICAgICAgbGV0IGNvdW50ZXJJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcbiAgICAgICAgICAgIGxldCB7IHNlY29uZHMsIG1pbnV0ZXMgfSA9IHRpbWVSZW1haW5pbmc7XG4gICAgICAgICAgICBzZXRUaW1lUmVtYWluaW5nKHtcbiAgICAgICAgICAgICAgICBzZWNvbmRzOiAtLXNlY29uZHNcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0sIDEwMDApXG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgICA8c3BhbiBcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJjb3VudGRvd25cIiBcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoc3RhcnRUaW1lcih0aW1lUmVtYWluaW5nKSl9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3RpbWVSZW1haW5pbmcubWludXRlc306e1xuICAgICAgICAgICAgICAgICAgICB0aW1lUmVtYWluaW5nLnNlY29uZHMgPT0gMCA/XG4gICAgICAgICAgICAgICAgICAgICAgICAnMDAnIDpcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpbWVSZW1haW5pbmcuc2Vjb25kcyA8IDEwID9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnMCcgKyB0aW1lUmVtYWluaW5nIDpcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGltZVJlbWFpbmluZy5zZWNvbmRzXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImNvdW50ZG93bi1jb250cm9sc1wiPlxuXG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDdyZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgICAuY291bnRkb3duLWNvbnRyb2xzIHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC8+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb3VudGRvd247Il19 */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js */\"));\n};\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js"],"names":["useState","Countdown","props","minutes","seconds","timeRemaining","setTimeRemaining","startTimer","counterInterval","setInterval"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,kBAEiBF,QAAQ,CAAC;AACjDG,IAAAA,OAAO,EAAE,EADwC;AAEjDC,IAAAA,OAAO,EAAE;AAFwC,GAAD,CAFzB;AAAA,MAEnBC,aAFmB;AAAA,MAEJC,gBAFI;;AAMvB,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACJ,OAAD,EAAUC,OAAV,EAAsB;AACrC,QAAII,eAAe,GAAGC,WAAW,CAAC,YAAM;AAAA,UAC9BL,OAD8B,GACTC,aADS,CAC9BD,OAD8B;AAAA,UACrBD,OADqB,GACTE,aADS,CACrBF,OADqB;AAEpCG,MAAAA,gBAAgB,CAAC;AACbF,QAAAA,OAAO,EAAE,EAAEA;AADE,OAAD,CAAhB;AAGH,KALgC,EAK9B,IAL8B,CAAjC;AAMH,GAPD;;AAQA,SACI,4BACI;AAEI,IAAA,OAAO,EAAGG,UAAU,CAACF,aAAD,CAFxB;AAAA,wCACc,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKA,aAAa,CAACF,OAJnB,OAKQE,aAAa,CAACD,OAAd,IAAyB,CAAzB,GACI,IADJ,GAEIC,aAAa,CAACD,OAAd,GAAwB,EAAxB,GACI,MAAMC,aADV,GAEQA,aAAa,CAACD,OATlC,CADJ,EAaI;AAAA,wCAAmB,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbJ;AAAA;AAAA;AAAA,srFADJ;AAgCH,CA9CD;;AAgDA,eAAeH,SAAf","sourcesContent":["import { useState } from 'react';\n\nconst Countdown = props => {\n\nconst [ timeRemaining, setTimeRemaining ] = useState({\n    minutes: 25,\n    seconds: 0\n})\n    const startTimer = (minutes, seconds) => {\n        let counterInterval = setInterval(() => {\n            let { seconds, minutes } = timeRemaining;\n            setTimeRemaining({\n                seconds: --seconds\n            })\n        }, 1000)\n    }\n    return (\n        <>\n            <span \n                className=\"countdown\" \n                onClick={(startTimer(timeRemaining))}\n            >\n                {timeRemaining.minutes}:{\n                    timeRemaining.seconds == 0 ?\n                        '00' :\n                        timeRemaining.seconds < 10 ?\n                            '0' + timeRemaining :\n                                timeRemaining.seconds\n                    }\n            </span>\n            <section className=\"countdown-controls\">\n\n            </section>\n            <style jsx>{`\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                font-size: 7rem;\n                font-weight: 500;\n                .countdown-controls {\n                    height: 50px;\n                    width: 100%;\n                    border-radius: 100px;\n                    background: white;\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}