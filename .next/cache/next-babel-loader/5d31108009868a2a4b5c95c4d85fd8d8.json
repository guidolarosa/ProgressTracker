{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { getTaskColor } from './../theme/colors';\n\nconst TaskPanel = props => {\n  // console.log(props)\n  return __jsx(\"section\", {\n    className: \"jsx-2370241644\" + \" \" + \"task-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-2370241644\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }, \"What are you working on?\"), props.userTasks ? props.userTasks.map((task, index) => {\n    return __jsx(\"span\", {\n      style: `color: white`,\n      key: index,\n      className: \"jsx-2370241644\" + \" \" + \"task\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 25\n      }\n    }, task.name);\n  }) : __jsx(\"span\", {\n    className: \"jsx-2370241644\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 22\n    }\n  }, \"No tasks added yet.\"), __jsx(_JSXStyle, {\n    id: \"2370241644\",\n    __self: this\n  }, \".task-panel.jsx-2370241644{background-color:white;grid-area:tasks;border-radius:10px;padding:20px;}.task-panel.jsx-2370241644 .task.jsx-2370241644{display:inline-block;padding:5px 10px;border-radius:100px;background:slateblue;font-size:.8rem;margin-right:5px;cursor:pointer;}h2.jsx-2370241644{color:#2D2D2D;font-size:1rem;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1Rhc2tQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQndCLEFBRzRDLEFBTUYsQUFTUCxjQUNDLE9BVEUsRUFORCxNQWdCRyxTQVRDLENBTkQsU0FnQnZCLFVBZmlCLEFBTVEsYUFMekIsUUFNb0IsZ0JBQ0MsaUJBQ0YsZUFDbkIiLCJmaWxlIjoiL1VzZXJzL2d1aWRvbGFyb3NhL0RvY3VtZW50cy9XRUJERVYvUHJvZ3Jlc3NUcmFja2VyL2NvbXBvbmVudHMvVGFza1BhbmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGdldFRhc2tDb2xvciB9IGZyb20gJy4vLi4vdGhlbWUvY29sb3JzJztcblxuY29uc3QgVGFza1BhbmVsID0gcHJvcHMgPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKHByb3BzKVxuICAgIHJldHVybiAoXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInRhc2stcGFuZWxcIj5cbiAgICAgICAgICAgIDxoMj5XaGF0IGFyZSB5b3Ugd29ya2luZyBvbj88L2gyPlxuICAgICAgICAgICAge3Byb3BzLnVzZXJUYXNrcyA/IFxuICAgICAgICAgICAgICAgIHByb3BzLnVzZXJUYXNrcy5tYXAoKHRhc2ssIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0YXNrXCIgXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e2Bjb2xvcjogd2hpdGVgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0YXNrLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9KSA6IDxzcGFuPk5vIHRhc2tzIGFkZGVkIHlldC48L3NwYW4+fVxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC50YXNrLXBhbmVsIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogdGFza3M7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrLXBhbmVsIC50YXNrIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHNsYXRlYmx1ZTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAuOHJlbTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaDIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzJEMkQyRDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFza1BhbmVsOyJdfQ== */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js */\"));\n};\n\nexport default TaskPanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js"],"names":["useEffect","useState","getTaskColor","TaskPanel","props","userTasks","map","task","index","name"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB;AACA,SACI;AAAA,wCAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEKA,KAAK,CAACC,SAAN,GACGD,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACjC,WACI;AAEI,MAAA,KAAK,EAAG,cAFZ;AAGI,MAAA,GAAG,EAAEA,KAHT;AAAA,0CACc,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKKD,IAAI,CAACE,IALV,CADJ;AASH,GAVD,CADH,GAWQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAbb;AAAA;AAAA;AAAA,s+FADJ;AAuCH,CAzCD;;AA2CA,eAAeN,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTaskColor } from './../theme/colors';\n\nconst TaskPanel = props => {\n    // console.log(props)\n    return (\n        <section className=\"task-panel\">\n            <h2>What are you working on?</h2>\n            {props.userTasks ? \n                props.userTasks.map((task, index) => {\n                    return (\n                        <span \n                            className=\"task\" \n                            style={`color: white`}\n                            key={index}>\n                            \n                            {task.name}\n                        </span>\n                    )\n                }) : <span>No tasks added yet.</span>}\n            <style jsx>{`\n                .task-panel {\n                    background-color: white;\n                    grid-area: tasks;\n                    border-radius: 10px;\n                    padding: 20px;\n                }\n                .task-panel .task {\n                    display: inline-block;\n                    padding: 5px 10px;\n                    border-radius: 100px;\n                    background: slateblue;\n                    font-size: .8rem;\n                    margin-right: 5px;\n                    cursor: pointer;\n                }\n                h2 {\n                    color: #2D2D2D;\n                    font-size: 1rem;\n                    margin-bottom: 10px;\n                }\n            `}</style>\n        </section>\n    )\n}\n\nexport default TaskPanel;"]},"metadata":{},"sourceType":"module"}