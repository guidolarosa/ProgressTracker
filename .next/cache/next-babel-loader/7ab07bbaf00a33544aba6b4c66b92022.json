{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { getTaskColor, getPallete } from './../theme/colors';\nimport TaskPanel from './TaskPanel';\nimport Countdown from './Countdown';\nimport Log from './Log';\n\nconst TimePanel = props => {\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"3900553281\", [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent']]]) + \" \" + \"time-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"3900553281\", [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent']]]) + \" \" + \"time-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"3900553281\", [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent']]]) + \" \" + \"type-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"Work\"), props.selectedTask ? __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"3900553281\", [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent']]]) + \" \" + \"selected-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, props.selectedTask.name) : ''), __jsx(Countdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), __jsx(Log, {\n    userTasks: props.userData.user_tasks,\n    selectedTask: props.selectedTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })), __jsx(TaskPanel, {\n    userTasks: props.userData.user_tasks,\n    setSelectedTask: props.setSelectedTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3900553281\",\n    dynamic: [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent'],\n    __self: this\n  }, `.time-panel.__jsx-style-dynamic-selector{padding:20px;grid-area:time;background-color:${getPallete('counter-background')};border-radius:10px;}.time-panel.__jsx-style-dynamic-selector .time-title.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;color:white;}.time-panel.__jsx-style-dynamic-selector .type-title.__jsx-style-dynamic-selector{color:#2D2D2D;text-align:center;}.time-panel.__jsx-style-dynamic-selector .selected-task.__jsx-style-dynamic-selector{display:inline-block;padding:5px 15px;min-width:40%;max-width:60%;text-align:center;border-radius:100px;pointer-events:none;background: ${props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent'};}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1RpbWVQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QndCLEFBR2tDLEFBTUEsQUFLQyxBQUlPLGFBZE4sQ0FXRyxPQUlELE9BZDZCLElBV2xELE1BSWtCLGNBQ0EsY0FDSSxRQWhCQyxBQUlXLFVBYVYsU0FoQnhCLFdBaUJ3QixvQkFFWSx5Q0FDcEMsd0JBaEJnQixZQUNoQiIsImZpbGUiOiIvVXNlcnMvZ3VpZG9sYXJvc2EvRG9jdW1lbnRzL1dFQkRFVi9Qcm9ncmVzc1RyYWNrZXIvY29tcG9uZW50cy9UaW1lUGFuZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0VGFza0NvbG9yLCBnZXRQYWxsZXRlIH0gZnJvbSAnLi8uLi90aGVtZS9jb2xvcnMnO1xuaW1wb3J0IFRhc2tQYW5lbCBmcm9tICcuL1Rhc2tQYW5lbCc7XG5pbXBvcnQgQ291bnRkb3duIGZyb20gJy4vQ291bnRkb3duJztcbmltcG9ydCBMb2cgZnJvbSAnLi9Mb2cnO1xuXG5jb25zdCBUaW1lUGFuZWwgPSBwcm9wcyA9PiB7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInRpbWUtcGFuZWxcIj5cbiAgICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJ0aW1lLXRpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0eXBlLXRpdGxlXCI+V29yazwvaDI+XG4gICAgICAgICAgICAgICAgICAgIHsgcHJvcHMuc2VsZWN0ZWRUYXNrID9cbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInNlbGVjdGVkLXRhc2tcIj57cHJvcHMuc2VsZWN0ZWRUYXNrLm5hbWV9PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgOlxuICAgICAgICAgICAgICAgICAgICAgICAgJydcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgICAgICAgICA8Q291bnRkb3duIC8+XG4gICAgICAgICAgICAgICAgPExvZyBcbiAgICAgICAgICAgICAgICAgICAgdXNlclRhc2tzPXtwcm9wcy51c2VyRGF0YS51c2VyX3Rhc2tzfVxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZFRhc2s9e3Byb3BzLnNlbGVjdGVkVGFza31cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgPFRhc2tQYW5lbCBcbiAgICAgICAgICAgICAgICB1c2VyVGFza3M9e3Byb3BzLnVzZXJEYXRhLnVzZXJfdGFza3N9XG4gICAgICAgICAgICAgICAgc2V0U2VsZWN0ZWRUYXNrPXtwcm9wcy5zZXRTZWxlY3RlZFRhc2t9XG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAudGltZS1wYW5lbCB7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogdGltZTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHtnZXRQYWxsZXRlKCdjb3VudGVyLWJhY2tncm91bmQnKX07XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50aW1lLXBhbmVsIC50aW1lLXRpdGxlIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50aW1lLXBhbmVsIC50eXBlLXRpdGxlIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMyRDJEMkQ7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRpbWUtcGFuZWwgLnNlbGVjdGVkLXRhc2sge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxNXB4O1xuICAgICAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDQwJTtcbiAgICAgICAgICAgICAgICAgICAgbWF4LXdpZHRoOiA2MCU7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcbiAgICAgICAgICAgICAgICAgICAgICAgICR7cHJvcHMuc2VsZWN0ZWRUYXNrID8gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZ2V0VGFza0NvbG9yKHByb3BzLnNlbGVjdGVkVGFzay5jb2xvcikgOlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICd0cmFuc3BhcmVudCd9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC8+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUaW1lUGFuZWw7Il19 */\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js */`));\n};\n\nexport default TimePanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js"],"names":["useEffect","useState","getTaskColor","getPallete","TaskPanel","Countdown","Log","TimePanel","props","selectedTask","color","name","userData","user_tasks","setSelectedTask"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,mBAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACvB,SACI,4BACI;AAAA,kDAuB4BL,UAAU,CAAC,oBAAD,CAvBtC,EA4CcK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA9ChB,aAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDAsBwBP,UAAU,CAAC,oBAAD,CAtBlC,EA2CUK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA7CZ,aAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,kDAqBoBP,UAAU,CAAC,oBAAD,CArB9B,EA0CMK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA5CR,aAAc,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMF,KAAK,CAACC,YAAN,GACE;AAAA,kDAmBgBN,UAAU,CAAC,oBAAD,CAnB1B,EAwCEK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA1CJ,aAAgB,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCF,KAAK,CAACC,YAAN,CAAmBE,IAApD,CADF,GAGE,EALR,CADJ,EASI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,MAAC,GAAD;AACI,IAAA,SAAS,EAAEH,KAAK,CAACI,QAAN,CAAeC,UAD9B;AAEI,IAAA,YAAY,EAAEL,KAAK,CAACC,YAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,EAgBI,MAAC,SAAD;AACI,IAAA,SAAS,EAAED,KAAK,CAACI,QAAN,CAAeC,UAD9B;AAEI,IAAA,eAAe,EAAEL,KAAK,CAACM,eAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ;AAAA;AAAA,cAwBgCX,UAAU,CAAC,oBAAD,CAxB1C,EA6CkBK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA/CpB;AAAA;AAAA,8FAwBgCP,UAAU,CAAC,oBAAD,CAxB1C,ooBA6CkBK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA/CpB;;6FAAA,EADJ;AAqDH,CAtDD;;AAwDA,eAAeH,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTaskColor, getPallete } from './../theme/colors';\nimport TaskPanel from './TaskPanel';\nimport Countdown from './Countdown';\nimport Log from './Log';\n\nconst TimePanel = props => {\n    return (\n        <>\n            <section className=\"time-panel\">\n                <section className=\"time-title\">\n                    <h2 className=\"type-title\">Work</h2>\n                    { props.selectedTask ?\n                        <span className=\"selected-task\">{props.selectedTask.name}</span>\n                        :\n                        ''\n                    }\n                </section>\n                <Countdown />\n                <Log \n                    userTasks={props.userData.user_tasks}\n                    selectedTask={props.selectedTask}\n                />\n            </section>\n            <TaskPanel \n                userTasks={props.userData.user_tasks}\n                setSelectedTask={props.setSelectedTask}\n                />\n            <style jsx>{`\n                .time-panel {\n                    padding: 20px;\n                    grid-area: time;\n                    background-color: ${getPallete('counter-background')};\n                    border-radius: 10px;\n                }\n                .time-panel .time-title {\n                    display: flex;\n                    justify-content: space-between;\n                    color: white;\n                }\n                .time-panel .type-title {\n                    color: #2D2D2D;\n                    text-align: center;\n                }\n                .time-panel .selected-task {\n                    display: inline-block;\n                    padding: 5px 15px;\n                    min-width: 40%;\n                    max-width: 60%;\n                    text-align: center;\n                    border-radius: 100px;\n                    pointer-events: none;\n                    background: \n                        ${props.selectedTask ? \n                            getTaskColor(props.selectedTask.color) :\n                            'transparent'};\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default TimePanel;"]},"metadata":{},"sourceType":"module"}