{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useInterval from './../tools/useInterval';\nimport { useState, useEffect } from 'react';\n\nconst Countdown = props => {\n  const {\n    0: isTimerRunning,\n    1: setIsTimerRunning\n  } = useState(false);\n  const {\n    0: timeRemaining,\n    1: setTimeRemaining\n  } = useState({\n    minutes: 25,\n    seconds: 0\n  });\n\n  const toggleTimerState = () => {\n    setIsTimerRunning(!isTimerRunning);\n  };\n\n  let timerInterval = null;\n  useEffect(() => {\n    let timerInterval = null;\n\n    if (isTimerRunning) {\n      console.log('Timer running');\n      timerInterval = setInterval(() => {\n        console.log('Tick...');\n        setTimeRemaining({\n          minutes: timeRemaining.minutes,\n          seconds: timeRemaining.seconds - 1\n        });\n      }, 1000);\n    } else {\n      console.log('Timer stopped');\n    }\n\n    return () => clearInterval(timerInterval);\n  }, [isTimerRunning]);\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    onClick: toggleTimerState,\n    className: \"jsx-3372631114\" + \" \" + \"countdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, timeRemaining.minutes, \":\", timeRemaining.seconds), __jsx(\"section\", {\n    className: \"jsx-3372631114\" + \" \" + \"countdown-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3372631114\",\n    __self: this\n  }, \".jsx-3372631114{display:inline-block;width:100%;text-align:center;font-size:6rem;font-weight:500;}.countdown-controls.jsx-3372631114{height:50px;width:100%;border-radius:100px;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL0NvdW50ZG93bi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2Q3dCLEFBRXNDLEFBTUwsWUFDRCxTQU5KLEVBT2EsU0FOTixXQU9HLE9BTk4sVUFPZixLQU5nQixnQkFPcEIiLCJmaWxlIjoiL1VzZXJzL2d1aWRvbGFyb3NhL0RvY3VtZW50cy9XRUJERVYvUHJvZ3Jlc3NUcmFja2VyL2NvbXBvbmVudHMvQ291bnRkb3duLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHVzZUludGVydmFsIGZyb20gJy4vLi4vdG9vbHMvdXNlSW50ZXJ2YWwnXG5pbXBvcnQgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5jb25zdCBDb3VudGRvd24gPSBwcm9wcyA9PiB7XG4gICAgXG4gICAgY29uc3QgWyBpc1RpbWVyUnVubmluZywgc2V0SXNUaW1lclJ1bm5pbmcgXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgICBjb25zdCBbIHRpbWVSZW1haW5pbmcsIHNldFRpbWVSZW1haW5pbmcgXSA9IHVzZVN0YXRlKHtcbiAgICAgICAgbWludXRlczogMjUsXG4gICAgICAgIHNlY29uZHM6IDBcbiAgICB9KTtcblxuICAgIGNvbnN0IHRvZ2dsZVRpbWVyU3RhdGUgPSAoKSA9PiB7XG4gICAgICAgIHNldElzVGltZXJSdW5uaW5nKCFpc1RpbWVyUnVubmluZyk7XG4gICAgfVxuICAgIFxuICAgIGxldCB0aW1lckludGVydmFsID0gbnVsbDtcbiAgICBcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBsZXQgdGltZXJJbnRlcnZhbCA9IG51bGw7XG4gICAgICAgIGlmIChpc1RpbWVyUnVubmluZykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1RpbWVyIHJ1bm5pbmcnKTtcbiAgICAgICAgICAgIHRpbWVySW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ1RpY2suLi4nKTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lUmVtYWluaW5nKHtcbiAgICAgICAgICAgICAgICAgICAgbWludXRlczogdGltZVJlbWFpbmluZy5taW51dGVzLFxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRzOiB0aW1lUmVtYWluaW5nLnNlY29uZHMgLSAxXG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH0sIDEwMDApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ1RpbWVyIHN0b3BwZWQnKVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKHRpbWVySW50ZXJ2YWwpO1xuICAgIH0sWyBpc1RpbWVyUnVubmluZyBdKVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxzcGFuIFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvdW50ZG93blwiIFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RvZ2dsZVRpbWVyU3RhdGV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3RpbWVSZW1haW5pbmcubWludXRlc306e3RpbWVSZW1haW5pbmcuc2Vjb25kc31cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImNvdW50ZG93bi1jb250cm9sc1wiPlxuXG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDZyZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgICAuY291bnRkb3duLWNvbnRyb2xzIHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC8+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb3VudGRvd247Il19 */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js */\"));\n};\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js"],"names":["useInterval","useState","useEffect","Countdown","props","isTimerRunning","setIsTimerRunning","timeRemaining","setTimeRemaining","minutes","seconds","toggleTimerState","timerInterval","console","log","setInterval","clearInterval"],"mappings":";;;;AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEvB,QAAM;AAAA,OAAEC,cAAF;AAAA,OAAkBC;AAAlB,MAAwCL,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM;AAAA,OAAEM,aAAF;AAAA,OAAiBC;AAAjB,MAAsCP,QAAQ,CAAC;AACjDQ,IAAAA,OAAO,EAAE,EADwC;AAEjDC,IAAAA,OAAO,EAAE;AAFwC,GAAD,CAApD;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACH,GAFD;;AAIA,MAAIO,aAAa,GAAG,IAApB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIU,aAAa,GAAG,IAApB;;AACA,QAAIP,cAAJ,EAAoB;AAChBQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAF,MAAAA,aAAa,GAAGG,WAAW,CAAC,MAAM;AAC9BF,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAN,QAAAA,gBAAgB,CAAC;AACbC,UAAAA,OAAO,EAAEF,aAAa,CAACE,OADV;AAEbC,UAAAA,OAAO,EAAEH,aAAa,CAACG,OAAd,GAAwB;AAFpB,SAAD,CAAhB;AAIH,OAN0B,EAMxB,IANwB,CAA3B;AAOH,KATD,MASO;AACHG,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;;AACD,WAAO,MAAME,aAAa,CAACJ,aAAD,CAA1B;AACH,GAfQ,EAeP,CAAEP,cAAF,CAfO,CAAT;AAiBA,SACI,4BACI;AAEI,IAAA,OAAO,EAAEM,gBAFb;AAAA,wCACc,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKJ,aAAa,CAACE,OAJnB,OAI6BF,aAAa,CAACG,OAJ3C,CADJ,EAOI;AAAA,wCAAmB,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ;AAAA;AAAA;AAAA,8mGADJ;AA0BH,CAzDD;;AA2DA,eAAeP,SAAf","sourcesContent":["import useInterval from './../tools/useInterval'\nimport { useState, useEffect } from 'react';\n\nconst Countdown = props => {\n    \n    const [ isTimerRunning, setIsTimerRunning ] = useState(false);\n    const [ timeRemaining, setTimeRemaining ] = useState({\n        minutes: 25,\n        seconds: 0\n    });\n\n    const toggleTimerState = () => {\n        setIsTimerRunning(!isTimerRunning);\n    }\n    \n    let timerInterval = null;\n    \n    useEffect(() => {\n        let timerInterval = null;\n        if (isTimerRunning) {\n            console.log('Timer running');\n            timerInterval = setInterval(() => {\n                console.log('Tick...');\n                setTimeRemaining({\n                    minutes: timeRemaining.minutes,\n                    seconds: timeRemaining.seconds - 1\n                })\n            }, 1000);\n        } else {\n            console.log('Timer stopped')\n        }\n        return () => clearInterval(timerInterval);\n    },[ isTimerRunning ])\n\n    return (\n        <>\n            <span \n                className=\"countdown\" \n                onClick={toggleTimerState}\n            >\n                {timeRemaining.minutes}:{timeRemaining.seconds}\n            </span>\n            <section className=\"countdown-controls\">\n\n            </section>\n            <style jsx>{`\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                font-size: 6rem;\n                font-weight: 500;\n                .countdown-controls {\n                    height: 50px;\n                    width: 100%;\n                    border-radius: 100px;\n                    background: white;\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}