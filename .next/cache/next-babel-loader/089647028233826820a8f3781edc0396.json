{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\n\nconst Countdown = props => {\n  const {\n    0: timerRunning,\n    1: setTimerRunning\n  } = useState(false);\n  const {\n    0: timeRemaining,\n    1: setTimeRemaining\n  } = useState({\n    minutes: 25,\n    seconds: 0\n  });\n\n  const toggleTimerState = () => {\n    setTimerRunning(!timerRunning);\n  };\n\n  useEffect(() => {\n    if (timerRunning) {\n      console.log('Counter started');\n      let counterInterval = setInterval(() => {\n        console.log('counting');\n        let {\n          seconds,\n          minutes\n        } = timeRemaining;\n\n        if (seconds == 0) {\n          setTimeRemaining(() => {\n            return {\n              seconds: 59,\n              minutes: --minutes\n            };\n          });\n        } else if (seconds == 0 && minutes == 0) {\n          console.log('Time\\'s up!');\n        } else {\n          setTimeRemaining(() => {\n            return {\n              seconds: --seconds,\n              minutes: minutes\n            };\n          });\n        }\n      }, 1000);\n    }\n\n    ;\n  }, [timerRunning]);\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    onClick: toggleTimerState,\n    className: \"jsx-3372631114\" + \" \" + \"countdown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, timeRemaining.minutes, \":\", timeRemaining.seconds), __jsx(\"section\", {\n    className: \"jsx-3372631114\" + \" \" + \"countdown-controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3372631114\",\n    __self: this\n  }, \".jsx-3372631114{display:inline-block;width:100%;text-align:center;font-size:6rem;font-weight:500;}.countdown-controls.jsx-3372631114{height:50px;width:100%;border-radius:100px;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL0NvdW50ZG93bi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvRHdCLEFBRXNDLEFBTUwsWUFDRCxTQU5KLEVBT2EsU0FOTixXQU9HLE9BTk4sVUFPZixLQU5nQixnQkFPcEIiLCJmaWxlIjoiL1VzZXJzL2d1aWRvbGFyb3NhL0RvY3VtZW50cy9XRUJERVYvUHJvZ3Jlc3NUcmFja2VyL2NvbXBvbmVudHMvQ291bnRkb3duLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcblxuY29uc3QgQ291bnRkb3duID0gcHJvcHMgPT4ge1xuXG4gICAgY29uc3QgWyB0aW1lclJ1bm5pbmcsIHNldFRpbWVyUnVubmluZyBdID0gdXNlU3RhdGUoZmFsc2UpO1xuICAgIGNvbnN0IFsgdGltZVJlbWFpbmluZywgc2V0VGltZVJlbWFpbmluZyBdID0gdXNlU3RhdGUoe1xuICAgICAgICBtaW51dGVzOiAyNSxcbiAgICAgICAgc2Vjb25kczogMFxuICAgIH0pO1xuXG4gICAgY29uc3QgdG9nZ2xlVGltZXJTdGF0ZSA9ICgpID0+IHtcbiAgICAgICAgc2V0VGltZXJSdW5uaW5nKCF0aW1lclJ1bm5pbmcpO1xuICAgIH1cbiAgICBcbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAodGltZXJSdW5uaW5nKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnQ291bnRlciBzdGFydGVkJylcbiAgICAgICAgICAgIGxldCBjb3VudGVySW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2NvdW50aW5nJylcbiAgICAgICAgICAgICAgICBsZXQgeyBzZWNvbmRzLCBtaW51dGVzIH0gPSB0aW1lUmVtYWluaW5nO1xuICAgICAgICAgICAgICAgIGlmIChzZWNvbmRzID09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZVJlbWFpbmluZygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHM6IDU5LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1pbnV0ZXM6IC0tbWludXRlc1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoc2Vjb25kcyA9PSAwICYmIG1pbnV0ZXMgPT0gMCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVGltZVxcJ3MgdXAhJyk7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0VGltZVJlbWFpbmluZygoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlY29uZHM6IC0tc2Vjb25kcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW51dGVzOiBtaW51dGVzXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSwgMTAwMClcbiAgICAgICAgfTtcbiAgICB9LFt0aW1lclJ1bm5pbmddKVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPD5cbiAgICAgICAgICAgIDxzcGFuIFxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImNvdW50ZG93blwiIFxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e3RvZ2dsZVRpbWVyU3RhdGV9XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3RpbWVSZW1haW5pbmcubWludXRlc306e3RpbWVSZW1haW5pbmcuc2Vjb25kc31cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImNvdW50ZG93bi1jb250cm9sc1wiPlxuXG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDZyZW07XG4gICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgICAuY291bnRkb3duLWNvbnRyb2xzIHtcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC8+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBDb3VudGRvd247Il19 */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js */\"));\n};\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js"],"names":["useState","useEffect","Countdown","props","timerRunning","setTimerRunning","timeRemaining","setTimeRemaining","minutes","seconds","toggleTimerState","console","log","counterInterval","setInterval"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEvB,QAAM;AAAA,OAAEC,YAAF;AAAA,OAAgBC;AAAhB,MAAoCL,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM;AAAA,OAAEM,aAAF;AAAA,OAAiBC;AAAjB,MAAsCP,QAAQ,CAAC;AACjDQ,IAAAA,OAAO,EAAE,EADwC;AAEjDC,IAAAA,OAAO,EAAE;AAFwC,GAAD,CAApD;;AAKA,QAAMC,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACH,GAFD;;AAIAH,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,YAAJ,EAAkB;AACdO,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,UAAIC,eAAe,GAAGC,WAAW,CAAC,MAAM;AACpCH,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,YAAI;AAAEH,UAAAA,OAAF;AAAWD,UAAAA;AAAX,YAAuBF,aAA3B;;AACA,YAAIG,OAAO,IAAI,CAAf,EAAkB;AACdF,UAAAA,gBAAgB,CAAC,MAAM;AACnB,mBAAO;AACHE,cAAAA,OAAO,EAAE,EADN;AAEHD,cAAAA,OAAO,EAAE,EAAEA;AAFR,aAAP;AAIH,WALe,CAAhB;AAMH,SAPD,MAOO,IAAIC,OAAO,IAAI,CAAX,IAAgBD,OAAO,IAAI,CAA/B,EAAkC;AACrCG,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,SAFM,MAEA;AACHL,UAAAA,gBAAgB,CAAC,MAAM;AACnB,mBAAO;AACHE,cAAAA,OAAO,EAAE,EAAEA,OADR;AAEHD,cAAAA,OAAO,EAAEA;AAFN,aAAP;AAIH,WALe,CAAhB;AAMH;AACJ,OApBgC,EAoB9B,IApB8B,CAAjC;AAqBH;;AAAA;AACJ,GAzBQ,EAyBP,CAACJ,YAAD,CAzBO,CAAT;AA2BA,SACI,4BACI;AAEI,IAAA,OAAO,EAAEM,gBAFb;AAAA,wCACc,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKJ,aAAa,CAACE,OAJnB,OAI6BF,aAAa,CAACG,OAJ3C,CADJ,EAOI;AAAA,wCAAmB,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ;AAAA;AAAA;AAAA,8+GADJ;AA0BH,CAjED;;AAmEA,eAAeP,SAAf","sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Countdown = props => {\n\n    const [ timerRunning, setTimerRunning ] = useState(false);\n    const [ timeRemaining, setTimeRemaining ] = useState({\n        minutes: 25,\n        seconds: 0\n    });\n\n    const toggleTimerState = () => {\n        setTimerRunning(!timerRunning);\n    }\n    \n    useEffect(() => {\n        if (timerRunning) {\n            console.log('Counter started')\n            let counterInterval = setInterval(() => {\n                console.log('counting')\n                let { seconds, minutes } = timeRemaining;\n                if (seconds == 0) {\n                    setTimeRemaining(() => {\n                        return {\n                            seconds: 59,\n                            minutes: --minutes\n                        }\n                    })\n                } else if (seconds == 0 && minutes == 0) {\n                    console.log('Time\\'s up!');\n                } else {\n                    setTimeRemaining(() => {\n                        return {\n                            seconds: --seconds,\n                            minutes: minutes\n                        }\n                    })\n                }\n            }, 1000)\n        };\n    },[timerRunning])\n\n    return (\n        <>\n            <span \n                className=\"countdown\" \n                onClick={toggleTimerState}\n            >\n                {timeRemaining.minutes}:{timeRemaining.seconds}\n            </span>\n            <section className=\"countdown-controls\">\n\n            </section>\n            <style jsx>{`\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                font-size: 6rem;\n                font-weight: 500;\n                .countdown-controls {\n                    height: 50px;\n                    width: 100%;\n                    border-radius: 100px;\n                    background: white;\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}