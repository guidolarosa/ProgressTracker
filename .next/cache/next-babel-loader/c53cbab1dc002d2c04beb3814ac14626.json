{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { getTaskColor } from './../theme/colors';\n\nvar TaskPanel = function TaskPanel(props) {\n  var getSelectedTask = function getSelectedTask(taskId) {\n    var userTasks = props.userTasks;\n    userTasks.forEach(function (task) {\n      if (task.id == taskId) {\n        console.log(task);\n        return task;\n      }\n    });\n  };\n\n  var switchSelectedTask = function switchSelectedTask(newTaskId) {\n    props.setSelectedTask(getSelectedTask(newTaskId));\n  };\n\n  return __jsx(\"section\", {\n    className: \"jsx-278359426\" + \" \" + \"task-panel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-278359426\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"What are you working on?\"), props.userTasks ? props.userTasks.map(function (task, index) {\n    return __jsx(\"span\", {\n      key: index,\n      taskId: task.id,\n      onClick: function onClick() {\n        switchSelectedTask(task.id);\n      },\n      style: {\n        background: getTaskColor(task.color)\n      },\n      className: \"jsx-278359426\" + \" \" + \"task\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, task.name);\n  }) : __jsx(\"span\", {\n    className: \"jsx-278359426\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 22\n    }\n  }, \"No tasks added yet.\"), __jsx(_JSXStyle, {\n    id: \"278359426\",\n    __self: _this\n  }, \".task-panel.jsx-278359426{background-color:white;grid-area:tasks;border-radius:10px;padding:20px;}.task-panel.jsx-278359426 .task.jsx-278359426{display:inline-block;padding:5px 10px;border-radius:100px;background:slateblue;font-size:.8rem;margin-right:5px;cursor:pointer;margin-bottom:5px;}h2.jsx-278359426{color:#2D2D2D;font-size:1rem;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1Rhc2tQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ3dCLEFBRzRDLEFBTUYsQUFVUCxjQUNDLE9BVkUsRUFORCxNQWlCRyxTQVZDLENBTkQsU0FpQnZCLFVBaEJpQixBQU1RLGFBTHpCLFFBTW9CLGdCQUNDLGlCQUNGLGVBQ0csa0JBQ3RCIiwiZmlsZSI6Ii9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1Rhc2tQYW5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXRUYXNrQ29sb3IgfSBmcm9tICcuLy4uL3RoZW1lL2NvbG9ycyc7XG5cbmNvbnN0IFRhc2tQYW5lbCA9IHByb3BzID0+IHtcblxuICAgIGNvbnN0IGdldFNlbGVjdGVkVGFzayA9IHRhc2tJZCA9PiB7XG4gICAgICAgIGNvbnN0IHVzZXJUYXNrcyA9IHByb3BzLnVzZXJUYXNrcztcbiAgICAgICAgdXNlclRhc2tzLmZvckVhY2godGFzayA9PiB7XG4gICAgICAgICAgICBpZiAodGFzay5pZCA9PSB0YXNrSWQpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0YXNrKTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGFzaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG4gICAgY29uc3Qgc3dpdGNoU2VsZWN0ZWRUYXNrID0gbmV3VGFza0lkID0+IHtcblxuICAgICAgICBwcm9wcy5zZXRTZWxlY3RlZFRhc2soZ2V0U2VsZWN0ZWRUYXNrKG5ld1Rhc2tJZCkpO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJ0YXNrLXBhbmVsXCI+XG4gICAgICAgICAgICA8aDI+V2hhdCBhcmUgeW91IHdvcmtpbmcgb24/PC9oMj5cbiAgICAgICAgICAgIHtwcm9wcy51c2VyVGFza3MgPyBcbiAgICAgICAgICAgICAgICBwcm9wcy51c2VyVGFza3MubWFwKCh0YXNrLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGFza1wiIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFza0lkPXt0YXNrLmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtzd2l0Y2hTZWxlY3RlZFRhc2sodGFzay5pZCl9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGdldFRhc2tDb2xvcih0YXNrLmNvbG9yKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt0YXNrLm5hbWV9XG4gICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICB9KSA6IDxzcGFuPk5vIHRhc2tzIGFkZGVkIHlldC48L3NwYW4+fVxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC50YXNrLXBhbmVsIHtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGdyaWQtYXJlYTogdGFza3M7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrLXBhbmVsIC50YXNrIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHggMTBweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHNsYXRlYmx1ZTtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAuOHJlbTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7XG4gICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBoMiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjMkQyRDJEO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDFyZW07XG4gICAgICAgICAgICAgICAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBUYXNrUGFuZWw7Il19 */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js */\"));\n};\n\nexport default TaskPanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js"],"names":["useEffect","useState","getTaskColor","TaskPanel","props","getSelectedTask","taskId","userTasks","forEach","task","id","console","log","switchSelectedTask","newTaskId","setSelectedTask","map","index","background","color","name"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAEvB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,MAAM,EAAI;AAC9B,QAAMC,SAAS,GAAGH,KAAK,CAACG,SAAxB;AACAA,IAAAA,SAAS,CAACC,OAAV,CAAkB,UAAAC,IAAI,EAAI;AACtB,UAAIA,IAAI,CAACC,EAAL,IAAWJ,MAAf,EAAuB;AACnBK,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,eAAOA,IAAP;AACH;AACJ,KALD;AAMH,GARD;;AASA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,SAAS,EAAI;AAEpCV,IAAAA,KAAK,CAACW,eAAN,CAAsBV,eAAe,CAACS,SAAD,CAArC;AACH,GAHD;;AAKA,SACI;AAAA,uCAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEKV,KAAK,CAACG,SAAN,GACGH,KAAK,CAACG,SAAN,CAAgBS,GAAhB,CAAoB,UAACP,IAAD,EAAOQ,KAAP,EAAiB;AACjC,WACI;AAEI,MAAA,GAAG,EAAEA,KAFT;AAGI,MAAA,MAAM,EAAER,IAAI,CAACC,EAHjB;AAII,MAAA,OAAO,EAAE,mBAAM;AAACG,QAAAA,kBAAkB,CAACJ,IAAI,CAACC,EAAN,CAAlB;AAA4B,OAJhD;AAKI,MAAA,KAAK,EAAE;AACHQ,QAAAA,UAAU,EAAEhB,YAAY,CAACO,IAAI,CAACU,KAAN;AADrB,OALX;AAAA,yCACc,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKV,IAAI,CAACW,IARV,CADJ;AAYH,GAbD,CADH,GAcQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhBb;AAAA;AAAA;AAAA,wvHADJ;AA2CH,CA3DD;;AA6DA,eAAejB,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTaskColor } from './../theme/colors';\n\nconst TaskPanel = props => {\n\n    const getSelectedTask = taskId => {\n        const userTasks = props.userTasks;\n        userTasks.forEach(task => {\n            if (task.id == taskId) {\n                console.log(task);\n                return task;\n            }\n        })\n    }\n    const switchSelectedTask = newTaskId => {\n\n        props.setSelectedTask(getSelectedTask(newTaskId));\n    };\n\n    return (\n        <section className=\"task-panel\">\n            <h2>What are you working on?</h2>\n            {props.userTasks ? \n                props.userTasks.map((task, index) => {\n                    return (\n                        <span \n                            className=\"task\" \n                            key={index}\n                            taskId={task.id}\n                            onClick={() => {switchSelectedTask(task.id)}}\n                            style={{\n                                background: getTaskColor(task.color)\n                            }}>\n                            {task.name}\n                        </span>\n                    )\n                }) : <span>No tasks added yet.</span>}\n            <style jsx>{`\n                .task-panel {\n                    background-color: white;\n                    grid-area: tasks;\n                    border-radius: 10px;\n                    padding: 20px;\n                }\n                .task-panel .task {\n                    display: inline-block;\n                    padding: 5px 10px;\n                    border-radius: 100px;\n                    background: slateblue;\n                    font-size: .8rem;\n                    margin-right: 5px;\n                    cursor: pointer;\n                    margin-bottom: 5px;\n                }\n                h2 {\n                    color: #2D2D2D;\n                    font-size: 1rem;\n                    margin-bottom: 10px;\n                }\n            `}</style>\n        </section>\n    )\n}\n\nexport default TaskPanel;"]},"metadata":{},"sourceType":"module"}