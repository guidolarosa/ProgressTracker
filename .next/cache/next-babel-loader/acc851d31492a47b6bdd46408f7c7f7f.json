{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { getTaskColor } from './../theme/colors';\n\nvar TaskPanel = function TaskPanel(props) {\n  var getSelectedTask = function getSelectedTask(taskId) {\n    var userTasks = props.userTasks;\n    var selectedTask = null;\n    userTasks.forEach(function (task) {\n      if (task.id == taskId) {\n        selectedTask = task;\n      }\n    });\n    return selectedTask;\n  };\n\n  var switchSelectedTask = function switchSelectedTask(newTaskId) {\n    var selectedTask = getSelectedTask(newTaskId);\n    console.log(selectedTask);\n    setTimeout(function () {\n      console.log(selectedTask);\n    }, 1000);\n    props.setSelectedTask(selectedTask);\n  };\n\n  return __jsx(\"section\", {\n    className: \"jsx-856806061\" + \" \" + \"task-panel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-856806061\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, \"What are you working on?\"), __jsx(\"section\", {\n    className: \"jsx-856806061\" + \" \" + \"tasks-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, props.userTasks ? props.userTasks.map(function (task, index) {\n    return __jsx(\"span\", {\n      key: index,\n      taskId: task.id,\n      onClick: function onClick() {\n        switchSelectedTask(task.id);\n      },\n      style: {\n        background: getTaskColor(task.color)\n      },\n      className: \"jsx-856806061\" + \" \" + \"task\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 29\n      }\n    }, task.name);\n  }) : __jsx(\"span\", {\n    className: \"jsx-856806061\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 26\n    }\n  }, \"No tasks added yet.\")), __jsx(_JSXStyle, {\n    id: \"856806061\",\n    __self: _this\n  }, \".task-panel.jsx-856806061{background-color:white;grid-area:tasks;border-radius:10px;padding:20px;}.task-panel.jsx-856806061 .task.jsx-856806061{display:inline-block;padding:5px 10px;border-radius:100px;background:slateblue;font-size:.8rem;margin-right:5px;cursor:pointer;margin-bottom:5px;}.tasks-container.jsx-856806061:hover .task.jsx-856806061{opacity:.5;-webkit-transition:.1s ease-in-out opacity;transition:.1s ease-in-out opacity;}.task.task.task.jsx-856806061:hover{opacity:1;}h2.jsx-856806061{color:#2D2D2D;font-size:1rem;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1Rhc2tQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2Q3dCLEFBRzRDLEFBTUYsQUFVVixBQUlELEFBR0ksVUFGbEIsQ0FKdUMsR0FPcEIsT0FqQkUsRUFORCxNQXdCRyxTQWpCQyxDQU5ELFNBd0J2QixVQXZCaUIsQUFNUSxhQUx6QixRQU1vQixVQVFwQixNQVBxQixpQkFDRixlQUNHLGtCQUN0QiIsImZpbGUiOiIvVXNlcnMvZ3VpZG9sYXJvc2EvRG9jdW1lbnRzL1dFQkRFVi9Qcm9ncmVzc1RyYWNrZXIvY29tcG9uZW50cy9UYXNrUGFuZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgZ2V0VGFza0NvbG9yIH0gZnJvbSAnLi8uLi90aGVtZS9jb2xvcnMnO1xuXG5jb25zdCBUYXNrUGFuZWwgPSBwcm9wcyA9PiB7XG5cbiAgICBjb25zdCBnZXRTZWxlY3RlZFRhc2sgPSB0YXNrSWQgPT4ge1xuICAgICAgICBjb25zdCB1c2VyVGFza3MgPSBwcm9wcy51c2VyVGFza3M7XG4gICAgICAgIGxldCBzZWxlY3RlZFRhc2sgPSBudWxsO1xuICAgICAgICB1c2VyVGFza3MuZm9yRWFjaCh0YXNrID0+IHtcbiAgICAgICAgICAgIGlmICh0YXNrLmlkID09IHRhc2tJZCkge1xuICAgICAgICAgICAgICAgIHNlbGVjdGVkVGFzayA9IHRhc2s7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIHJldHVybiBzZWxlY3RlZFRhc2s7XG4gICAgfVxuICAgIGNvbnN0IHN3aXRjaFNlbGVjdGVkVGFzayA9IG5ld1Rhc2tJZCA9PiB7XG4gICAgICAgIGxldCBzZWxlY3RlZFRhc2sgPSBnZXRTZWxlY3RlZFRhc2sobmV3VGFza0lkKTtcbiAgICAgICAgY29uc29sZS5sb2coc2VsZWN0ZWRUYXNrKTtcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhzZWxlY3RlZFRhc2spXG4gICAgICAgIH0sIDEwMDApXG4gICAgICAgIHByb3BzLnNldFNlbGVjdGVkVGFzayhzZWxlY3RlZFRhc2spO1xuICAgIH07XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJ0YXNrLXBhbmVsXCI+XG4gICAgICAgICAgICA8aDI+V2hhdCBhcmUgeW91IHdvcmtpbmcgb24/PC9oMj5cbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInRhc2tzLWNvbnRhaW5lclwiPlxuICAgICAgICAgICAgICAgIHtwcm9wcy51c2VyVGFza3MgPyBcbiAgICAgICAgICAgICAgICAgICAgcHJvcHMudXNlclRhc2tzLm1hcCgodGFzaywgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cInRhc2tcIiBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFza0lkPXt0YXNrLmlkfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7c3dpdGNoU2VsZWN0ZWRUYXNrKHRhc2suaWQpfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGdldFRhc2tDb2xvcih0YXNrLmNvbG9yKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3Rhc2submFtZX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgIH0pIDogPHNwYW4+Tm8gdGFza3MgYWRkZWQgeWV0Ljwvc3Bhbj5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgLnRhc2stcGFuZWwge1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiB0YXNrcztcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRhc2stcGFuZWwgLnRhc2sge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IDVweCAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogc2xhdGVibHVlO1xuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IC44cmVtO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiA1cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrcy1jb250YWluZXI6aG92ZXIgLnRhc2sge1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAuNTtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNpdGlvbjogLjFzIGVhc2UtaW4tb3V0IG9wYWNpdHk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50YXNrLnRhc2sudGFzazpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGgyIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMyRDJEMkQ7XG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvc2VjdGlvbj5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhc2tQYW5lbDsiXX0= */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js */\"));\n};\n\nexport default TaskPanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js"],"names":["useEffect","useState","getTaskColor","TaskPanel","props","getSelectedTask","taskId","userTasks","selectedTask","forEach","task","id","switchSelectedTask","newTaskId","console","log","setTimeout","setSelectedTask","map","index","background","color","name"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAEvB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,MAAM,EAAI;AAC9B,QAAMC,SAAS,GAAGH,KAAK,CAACG,SAAxB;AACA,QAAIC,YAAY,GAAG,IAAnB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkB,UAAAC,IAAI,EAAI;AACtB,UAAIA,IAAI,CAACC,EAAL,IAAWL,MAAf,EAAuB;AACnBE,QAAAA,YAAY,GAAGE,IAAf;AACH;AACJ,KAJD;AAKA,WAAOF,YAAP;AACH,GATD;;AAUA,MAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,SAAS,EAAI;AACpC,QAAIL,YAAY,GAAGH,eAAe,CAACQ,SAAD,CAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACAQ,IAAAA,UAAU,CAAC,YAAM;AACbF,MAAAA,OAAO,CAACC,GAAR,CAAYP,YAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGAJ,IAAAA,KAAK,CAACa,eAAN,CAAsBT,YAAtB;AACH,GAPD;;AASA,SACI;AAAA,uCAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAA,uCAAmB,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACG,SAAN,GACGH,KAAK,CAACG,SAAN,CAAgBW,GAAhB,CAAoB,UAACR,IAAD,EAAOS,KAAP,EAAiB;AACjC,WACI;AAEI,MAAA,GAAG,EAAEA,KAFT;AAGI,MAAA,MAAM,EAAET,IAAI,CAACC,EAHjB;AAII,MAAA,OAAO,EAAE,mBAAM;AAACC,QAAAA,kBAAkB,CAACF,IAAI,CAACC,EAAN,CAAlB;AAA4B,OAJhD;AAKI,MAAA,KAAK,EAAE;AACHS,QAAAA,UAAU,EAAElB,YAAY,CAACQ,IAAI,CAACW,KAAN;AADrB,OALX;AAAA,yCACc,MADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKX,IAAI,CAACY,IARV,CADJ;AAYH,GAbD,CADH,GAcQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAfb,CAFJ;AAAA;AAAA;AAAA,0wJADJ;AAqDH,CA1ED;;AA4EA,eAAenB,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTaskColor } from './../theme/colors';\n\nconst TaskPanel = props => {\n\n    const getSelectedTask = taskId => {\n        const userTasks = props.userTasks;\n        let selectedTask = null;\n        userTasks.forEach(task => {\n            if (task.id == taskId) {\n                selectedTask = task;\n            }\n        })\n        return selectedTask;\n    }\n    const switchSelectedTask = newTaskId => {\n        let selectedTask = getSelectedTask(newTaskId);\n        console.log(selectedTask);\n        setTimeout(() => {\n            console.log(selectedTask)\n        }, 1000)\n        props.setSelectedTask(selectedTask);\n    };\n\n    return (\n        <section className=\"task-panel\">\n            <h2>What are you working on?</h2>\n            <section className=\"tasks-container\">\n                {props.userTasks ? \n                    props.userTasks.map((task, index) => {\n                        return (\n                            <span \n                                className=\"task\" \n                                key={index}\n                                taskId={task.id}\n                                onClick={() => {switchSelectedTask(task.id)}}\n                                style={{\n                                    background: getTaskColor(task.color)\n                                }}>\n                                {task.name}\n                            </span>\n                        )\n                    }) : <span>No tasks added yet.</span>\n                }\n            </section>\n            <style jsx>{`\n                .task-panel {\n                    background-color: white;\n                    grid-area: tasks;\n                    border-radius: 10px;\n                    padding: 20px;\n                }\n                .task-panel .task {\n                    display: inline-block;\n                    padding: 5px 10px;\n                    border-radius: 100px;\n                    background: slateblue;\n                    font-size: .8rem;\n                    margin-right: 5px;\n                    cursor: pointer;\n                    margin-bottom: 5px;\n                }\n                .tasks-container:hover .task {\n                    opacity: .5;\n                    transition: .1s ease-in-out opacity;\n                }\n                .task.task.task:hover {\n                    opacity: 1;\n                }\n                h2 {\n                    color: #2D2D2D;\n                    font-size: 1rem;\n                    margin-bottom: 10px;\n                }\n            `}</style>\n        </section>\n    )\n}\n\nexport default TaskPanel;"]},"metadata":{},"sourceType":"module"}