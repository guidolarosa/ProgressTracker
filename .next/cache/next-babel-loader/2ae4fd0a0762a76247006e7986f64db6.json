{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getBlack, getPallete } from './../theme/colors';\nimport Moment from 'react-moment';\n\nconst DetailsPanel = props => {\n  const {\n    currentUserData\n  } = props;\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const today = new Date();\n\n  const turnDaysIntoArray = month => {\n    const days = [];\n    const totalDays = daysInMonth(month, today.getFullYear());\n\n    for (let i = 1; i <= totalDays; i++) {\n      days.push(i);\n    }\n\n    return days;\n  };\n\n  const daysInMonth = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n\n  const formatDate = date => {\n    let month = date.getMonth();\n    let day = date.getDate();\n    let year = date.getFullYear();\n    let weekday = date.getDay();\n    return `${weekdays[weekday]} ${day} ${months[month]} ${year}`;\n  };\n\n  const isFutureMonth = (year, month, day) => {\n    let givenDate = new Date(year, month, day);\n    let isFutureMonth = givenDate > today ? true : false;\n    return isFutureMonth;\n  };\n\n  const isDayEmpty = (year, month, day) => {\n    let givenDate = new Date(year, month, day);\n    let userTaskHistory = currentUserData.user_history;\n    userTaskHistory.forEach(date => {\n      console.log(date);\n    });\n  };\n\n  return __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]) + \" \" + \"details-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]) + \" \" + \"dropdown-title-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"Months\"), __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]) + \" \" + \"months-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, months.map((month, monthIndex) => {\n    return __jsx(\"section\", {\n      key: monthIndex,\n      className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]) + \" \" + ((monthIndex > today.getMonth() ? 'month following-month' : 'month') || \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, __jsx(\"h3\", {\n      className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]) + \" \" + \"month-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, month), __jsx(\"section\", {\n      className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]) + \" \" + \"day-progress-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, turnDaysIntoArray(monthIndex).map(day => {\n      return __jsx(\"section\", {\n        title: formatDate(new Date(today.getFullYear(), monthIndex, day)),\n        className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]) + \" \" + \"day-indicator\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 41\n        }\n      }, isFutureMonth(today.getFullYear(), monthIndex, day) ? __jsx(\"img\", {\n        src: \"/img/icon-day-indicator-disabled.png\",\n        className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 53\n        }\n      }) : isDayEmpty(today.getFullYear(), monthIndex, day) ? __jsx(\"img\", {\n        src: \"/img/icon-day-indicator-empty.png\",\n        className: _JSXStyle.dynamic([[\"3279823287\", [getBlack(0.8), getBlack(.5), getBlack(.1)]]]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 53\n        }\n      }) : '');\n    })));\n  })), __jsx(_JSXStyle, {\n    id: \"3279823287\",\n    dynamic: [getBlack(0.8), getBlack(.5), getBlack(.1)],\n    __self: this\n  }, `.details-panel.__jsx-style-dynamic-selector{padding:20px;background:white;grid-area:details;border-radius:10px;position:relative;}.details-panel.__jsx-style-dynamic-selector::before{content:'';position:absolute;width:100%;background:white;height:30px;opacity:1;bottom:10px;left:0;background:linear-gradient(rgba(0,0,0,0),white);z-index:1;}.details-panel.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{color:${getBlack(0.8)};}.months-container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;overflow-y:auto;height:95%;padding-right:15px;margin-top:5px;}.months-container.__jsx-style-dynamic-selector::-webkit-scrollbar{background:white;border:0;width:5px;}.months-container.__jsx-style-dynamic-selector::-webkit-scrollbar-thumb{background:lightgray;border-radius:10px;}.month.__jsx-style-dynamic-selector{width:47%;margin-bottom:20px;}.month.__jsx-style-dynamic-selector .month-name.__jsx-style-dynamic-selector{font-weight:500;color:${getBlack(.5)};padding-bottom:3px;border-bottom:1px solid ${getBlack(.1)};margin-bottom:10px;}.month.following-month.__jsx-style-dynamic-selector h3.__jsx-style-dynamic-selector{opacity:.3;}.day-progress-container.__jsx-style-dynamic-selector{display:grid;grid-template-columns:repeat(7,7fr);grid-template-rows:repeat(5,auto);-webkit-column-gap:3px;column-gap:3px;row-gap:5px;}.day-progress-container.__jsx-style-dynamic-selector .day-indicator.__jsx-style-dynamic-selector img.__jsx-style-dynamic-selector{width:100%;}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js */`));\n};\n\nexport default DetailsPanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js"],"names":["getBlack","getPallete","Moment","DetailsPanel","props","currentUserData","months","weekdays","today","Date","turnDaysIntoArray","month","days","totalDays","daysInMonth","getFullYear","i","push","year","getDate","formatDate","date","getMonth","day","weekday","getDay","isFutureMonth","givenDate","isDayEmpty","userTaskHistory","user_history","forEach","console","log","map","monthIndex"],"mappings":"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","sourcesContent":["import { getBlack, getPallete } from './../theme/colors';\nimport Moment from 'react-moment';\n\nconst DetailsPanel = props => {\n    const { currentUserData } = props;\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ];\n\n    const weekdays = [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n    ]\n\n    const today = new Date();\n\n    const turnDaysIntoArray = (month) => {\n        const days = [];\n        const totalDays = daysInMonth(month, today.getFullYear());\n        for (let i = 1; i <= totalDays; i++) {\n            days.push(i);\n        }\n        return days;\n    }\n\n    const daysInMonth = (month, year) => {\n        return new Date(year, month, 0).getDate();\n    }\n\n    const formatDate = date => {\n        let month = date.getMonth();\n        let day = date.getDate();\n        let year = date.getFullYear();\n        let weekday = date.getDay();\n        return `${weekdays[weekday]} ${day} ${months[month]} ${year}`;\n    }\n\n    const isFutureMonth = (year, month, day) => {\n        let givenDate = new Date(year, month, day);\n        let isFutureMonth = givenDate > today ? true : false;\n        return isFutureMonth;\n    }\n\n    const isDayEmpty = (year, month, day) => {\n        let givenDate = new Date(year, month, day);\n        let userTaskHistory = currentUserData.user_history;\n        userTaskHistory.forEach(date => {\n            console.log(date);\n        })\n    }\n\n    return (\n        <section className=\"details-panel\">\n            <h2 className=\"dropdown-title-selector\">Months</h2>\n            <section className=\"months-container\">\n                {months.map((month, monthIndex) => {\n                    return (\n                        <section \n                            className={monthIndex > today.getMonth() ?\n                                'month following-month' :\n                                'month'}\n                            key={monthIndex}>\n                            <h3 className=\"month-name\">{month}</h3>\n                            <section className=\"day-progress-container\">\n                                {turnDaysIntoArray(monthIndex).map((day) => {\n                                    return (\n                                        <section \n                                            title={formatDate(new Date(today.getFullYear(), monthIndex, day))}\n                                            className=\"day-indicator\">\n                                                {isFutureMonth(today.getFullYear(), monthIndex, day) ?\n                                                    <img src='/img/icon-day-indicator-disabled.png'/> :\n                                                    isDayEmpty(today.getFullYear(), monthIndex, day) ? \n                                                    <img src='/img/icon-day-indicator-empty.png' /> :\n                                                    ''}\n                                        </section>\n                                    )\n                                })}\n                            </section>\n                        </section>\n                    )\n                })}\n            </section>\n            <style jsx>{`\n                .details-panel {\n                    padding: 20px;\n                    background: white;\n                    grid-area: details;\n                    border-radius: 10px;\n                    position: relative;\n                }\n                .details-panel::before {\n                    content: '';\n                    position: absolute;\n                    width: 100%;\n                    background: white;\n                    height: 30px;\n                    opacity: 1;\n                    bottom: 10px;\n                    left: 0;\n                    background: linear-gradient(rgba(0,0,0,0), white);\n                    z-index: 1;\n                }\n                .details-panel h2 {\n                    color: ${getBlack(0.8)};\n                }\n                .months-container {\n                    display: flex;\n                    justify-content: space-between;\n                    flex-wrap: wrap;\n                    overflow-y: auto;\n                    height: 95%;\n                    padding-right: 15px;\n                    margin-top: 5px;\n                }\n                .months-container::-webkit-scrollbar {\n                    background: white;\n                    border: 0;\n                    width: 5px;\n                }\n                .months-container::-webkit-scrollbar-thumb {\n                    background: lightgray;\n                    border-radius: 10px;\n                }\n                .month {\n                    width: 47%;\n                    margin-bottom: 20px;\n                }\n                .month .month-name {\n                    font-weight: 500;\n                    color: ${getBlack(.5)};\n                    padding-bottom: 3px;\n                    border-bottom: 1px solid ${getBlack(.1)};\n                    margin-bottom: 10px;\n                }\n                .month.following-month h3{\n                    opacity: .3;\n                }\n                .day-progress-container {\n                    display: grid;\n                    grid-template-columns: repeat(7, 7fr);\n                    grid-template-rows: repeat(5, auto);\n                    column-gap: 3px;\n                    row-gap: 5px;\n                }\n                .day-progress-container .day-indicator img {\n                    width: 100%;\n                }\n            `}</style>\n        </section>\n    )\n}\n\nexport default DetailsPanel;"]},"metadata":{},"sourceType":"module"}