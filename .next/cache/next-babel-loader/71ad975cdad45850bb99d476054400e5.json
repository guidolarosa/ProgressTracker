{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { getBlack, getPallete } from './../theme/colors';\nimport Moment from 'react-moment';\n\nconst DetailsPanel = props => {\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const today = new Date();\n\n  const turnDaysIntoArray = month => {\n    const days = [];\n    const totalDays = daysInMonth(month, today.getFullYear());\n\n    for (let i = 1; i <= totalDays; i++) {\n      days.push(i);\n    }\n\n    return days;\n  };\n\n  const daysInMonth = (month, year) => {\n    return new Date(year, month, 0).getDate();\n  };\n\n  const formatDate = date => {\n    let month = date.getMonth();\n    let day = date.getDate();\n    let year = date.getFullYear();\n    let weekday = date.getDay();\n    return `${weekdays[weekday]} ${day} ${months[month]} ${year}`;\n  };\n\n  return __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"1371189541\", [getBlack(0.8), getBlack(.5), getBlack(.7), getPallete('green')]]]) + \" \" + \"details-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"1371189541\", [getBlack(0.8), getBlack(.5), getBlack(.7), getPallete('green')]]]) + \" \" + \"dropdown-title-selector\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Months\"), __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"1371189541\", [getBlack(0.8), getBlack(.5), getBlack(.7), getPallete('green')]]]) + \" \" + \"months-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, months.map((month, monthIndex) => {\n    return __jsx(\"section\", {\n      key: monthIndex,\n      className: _JSXStyle.dynamic([[\"1371189541\", [getBlack(0.8), getBlack(.5), getBlack(.7), getPallete('green')]]]) + \" \" + \"month\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }, __jsx(\"h3\", {\n      className: _JSXStyle.dynamic([[\"1371189541\", [getBlack(0.8), getBlack(.5), getBlack(.7), getPallete('green')]]]) + \" \" + \"month-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 29\n      }\n    }, month), __jsx(\"section\", {\n      className: _JSXStyle.dynamic([[\"1371189541\", [getBlack(0.8), getBlack(.5), getBlack(.7), getPallete('green')]]]) + \" \" + \"day-progress-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, turnDaysIntoArray(monthIndex).map(day => {\n      return __jsx(\"section\", {\n        title: formatDate(new Date(today.getFullYear(), monthIndex, day)),\n        className: _JSXStyle.dynamic([[\"1371189541\", [getBlack(0.8), getBlack(.5), getBlack(.7), getPallete('green')]]]) + \" \" + \"day-indicator empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 41\n        }\n      });\n    })));\n  })), __jsx(_JSXStyle, {\n    id: \"1371189541\",\n    dynamic: [getBlack(0.8), getBlack(.5), getBlack(.7), getPallete('green')],\n    __self: this\n  }, `.details-panel.__jsx-style-dynamic-selector{padding:20px;background:white;grid-area:details;border-radius:10px;position:relative;}.details-panel.__jsx-style-dynamic-selector::before{content:'';position:absolute;width:100%;background:white;height:30px;opacity:1;bottom:10px;left:0;background:linear-gradient(rgba(0,0,0,0),white);z-index:1;}.details-panel.__jsx-style-dynamic-selector h2.__jsx-style-dynamic-selector{color:${getBlack(0.8)};}.months-container.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;-webkit-flex-wrap:wrap;-ms-flex-wrap:wrap;flex-wrap:wrap;overflow-y:auto;height:95%;padding-right:5px;margin-top:5px;}.months-container.__jsx-style-dynamic-selector::-webkit-scrollbar{background:white;border:0;width:5px;}.months-container.__jsx-style-dynamic-selector::-webkit-scrollbar-thumb{background:lightgray;border-radius:10px;}.months-container.__jsx-style-dynamic-selector .month.__jsx-style-dynamic-selector{width:47%;margin-bottom:20px;}.months-container.__jsx-style-dynamic-selector .month.__jsx-style-dynamic-selector .month-name.__jsx-style-dynamic-selector{font-weight:500;color:${getBlack(.5)};border-bottom:1px solid ${getBlack(.7)};margin-bottom:10px;}.day-progress-container.__jsx-style-dynamic-selector{display:grid;grid-template-columns:repeat(7,7fr);grid-template-rows:repeat(5,auto);-webkit-column-gap:10px;column-gap:10px;row-gap:5px;}.day-progress-container.__jsx-style-dynamic-selector .day-indicator.__jsx-style-dynamic-selector{background-color:${getPallete('green')};width:100%;height:1.4vw;border-radius:100px;cursor:pointer;-webkit-transition:.1s ease-in-out -webkit-transform;-webkit-transition:.1s ease-in-out transform;transition:.1s ease-in-out transform;}.day-progress-container.__jsx-style-dynamic-selector .day-indicator.__jsx-style-dynamic-selector:hover{-webkit-transform:scale(.9);-ms-transform:scale(.9);transform:scale(.9);}\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL0RldGFpbHNQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5RXdCLEFBR2tDLEFBT0YsQUFZd0IsQUFHdEIsQUFTSSxBQUtJLEFBSVgsQUFJTSxBQU1ILEFBT2lDLEFBUTFCLFVBeEJELENBakNELEVBUEQsQUFrRG9CLEdBTkYsQ0FiMUIsSUFLVSxLQUpULEdBeEJDLEFBaUNmLENBeENzQixLQWtCdEIsQ0FjQSxJQXhCcUIsQUE0QnJCLE1Bb0JlLEVBdkRRLENBaURnQixFQU5rQixNQW5DekMsQUFnREMsVUF2REssRUFRUixDQWdEVSxFQU14QixFQTNDa0MsS0FWbEIsSUF3Q0ksRUFoRHBCLEtBd0RtQixDQS9DUixPQUMwQyxNQWdDOUIsQ0Fla0Isa0JBZHpDLEFBTWdCLFlBQ2hCLFdBdkNjLFVBQ2QsaUNBT21CLG1EQXVDbkIsTUF0Q29CLGdCQUNMLFdBQ08sa0JBQ0gsZUFDbkIiLCJmaWxlIjoiL1VzZXJzL2d1aWRvbGFyb3NhL0RvY3VtZW50cy9XRUJERVYvUHJvZ3Jlc3NUcmFja2VyL2NvbXBvbmVudHMvRGV0YWlsc1BhbmVsLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0QmxhY2ssIGdldFBhbGxldGUgfSBmcm9tICcuLy4uL3RoZW1lL2NvbG9ycyc7XG5pbXBvcnQgTW9tZW50IGZyb20gJ3JlYWN0LW1vbWVudCc7XG5cbmNvbnN0IERldGFpbHNQYW5lbCA9IHByb3BzID0+IHtcbiAgICBjb25zdCBtb250aHMgPSBbXG4gICAgICAgICdKYW51YXJ5JyxcbiAgICAgICAgJ0ZlYnJ1YXJ5JyxcbiAgICAgICAgJ01hcmNoJyxcbiAgICAgICAgJ0FwcmlsJyxcbiAgICAgICAgJ01heScsXG4gICAgICAgICdKdW5lJyxcbiAgICAgICAgJ0p1bHknLFxuICAgICAgICAnQXVndXN0JyxcbiAgICAgICAgJ1NlcHRlbWJlcicsXG4gICAgICAgICdPY3RvYmVyJyxcbiAgICAgICAgJ05vdmVtYmVyJyxcbiAgICAgICAgJ0RlY2VtYmVyJ1xuICAgIF07XG5cbiAgICBjb25zdCB3ZWVrZGF5cyA9IFtcbiAgICAgICAgJ01vbmRheScsXG4gICAgICAgICdUdWVzZGF5JyxcbiAgICAgICAgJ1dlZG5lc2RheScsXG4gICAgICAgICdUaHVyc2RheScsXG4gICAgICAgICdGcmlkYXknLFxuICAgICAgICAnU2F0dXJkYXknLFxuICAgICAgICAnU3VuZGF5J1xuICAgIF1cblxuICAgIGNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcblxuICAgIGNvbnN0IHR1cm5EYXlzSW50b0FycmF5ID0gKG1vbnRoKSA9PiB7XG4gICAgICAgIGNvbnN0IGRheXMgPSBbXTtcbiAgICAgICAgY29uc3QgdG90YWxEYXlzID0gZGF5c0luTW9udGgobW9udGgsIHRvZGF5LmdldEZ1bGxZZWFyKCkpO1xuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8PSB0b3RhbERheXM7IGkrKykge1xuICAgICAgICAgICAgZGF5cy5wdXNoKGkpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBkYXlzO1xuICAgIH1cblxuICAgIGNvbnN0IGRheXNJbk1vbnRoID0gKG1vbnRoLCB5ZWFyKSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgMCkuZ2V0RGF0ZSgpO1xuICAgIH1cblxuICAgIGNvbnN0IGZvcm1hdERhdGUgPSBkYXRlID0+IHtcbiAgICAgICAgbGV0IG1vbnRoID0gZGF0ZS5nZXRNb250aCgpO1xuICAgICAgICBsZXQgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgIGxldCB5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgICBsZXQgd2Vla2RheSA9IGRhdGUuZ2V0RGF5KCk7XG4gICAgICAgIHJldHVybiBgJHt3ZWVrZGF5c1t3ZWVrZGF5XX0gJHtkYXl9ICR7bW9udGhzW21vbnRoXX0gJHt5ZWFyfWA7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiZGV0YWlscy1wYW5lbFwiPlxuICAgICAgICAgICAgPGgyIGNsYXNzTmFtZT1cImRyb3Bkb3duLXRpdGxlLXNlbGVjdG9yXCI+TW9udGhzPC9oMj5cbiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cIm1vbnRocy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICB7bW9udGhzLm1hcCgobW9udGgsIG1vbnRoSW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cIm1vbnRoXCIga2V5PXttb250aEluZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aDMgY2xhc3NOYW1lPVwibW9udGgtbmFtZVwiPnttb250aH08L2gzPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cImRheS1wcm9ncmVzcy1jb250YWluZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3R1cm5EYXlzSW50b0FycmF5KG1vbnRoSW5kZXgpLm1hcCgoZGF5KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzZWN0aW9uIFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aXRsZT17Zm9ybWF0RGF0ZShuZXcgRGF0ZSh0b2RheS5nZXRGdWxsWWVhcigpLCBtb250aEluZGV4LCBkYXkpKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZGF5LWluZGljYXRvciBlbXB0eVwiPjwvc2VjdGlvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSl9XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgLmRldGFpbHMtcGFuZWwge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiBkZXRhaWxzO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5kZXRhaWxzLXBhbmVsOjpiZWZvcmUge1xuICAgICAgICAgICAgICAgICAgICBjb250ZW50OiAnJztcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogMzBweDtcbiAgICAgICAgICAgICAgICAgICAgb3BhY2l0eTogMTtcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQocmdiYSgwLDAsMCwwKSwgd2hpdGUpO1xuICAgICAgICAgICAgICAgICAgICB6LWluZGV4OiAxO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuZGV0YWlscy1wYW5lbCBoMiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbG9yOiAke2dldEJsYWNrKDAuOCl9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAubW9udGhzLWNvbnRhaW5lciB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAgICAgICAgICAgICAgICAgZmxleC13cmFwOiB3cmFwO1xuICAgICAgICAgICAgICAgICAgICBvdmVyZmxvdy15OiBhdXRvO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDk1JTtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1yaWdodDogNXB4O1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tb250aHMtY29udGFpbmVyOjotd2Via2l0LXNjcm9sbGJhciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDA7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiA1cHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC5tb250aHMtY29udGFpbmVyOjotd2Via2l0LXNjcm9sbGJhci10aHVtYiB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpZ2h0Z3JheTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1vbnRocy1jb250YWluZXIgLm1vbnRoIHtcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDQ3JTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLm1vbnRocy1jb250YWluZXIgLm1vbnRoIC5tb250aC1uYW1lIHtcbiAgICAgICAgICAgICAgICAgICAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICR7Z2V0QmxhY2soLjUpfTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICR7Z2V0QmxhY2soLjcpfTtcbiAgICAgICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLmRheS1wcm9ncmVzcy1jb250YWluZXIge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xuICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCg3LCA3ZnIpO1xuICAgICAgICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg1LCBhdXRvKTtcbiAgICAgICAgICAgICAgICAgICAgY29sdW1uLWdhcDogMTBweDtcbiAgICAgICAgICAgICAgICAgICAgcm93LWdhcDogNXB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuZGF5LXByb2dyZXNzLWNvbnRhaW5lciAuZGF5LWluZGljYXRvciB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR7Z2V0UGFsbGV0ZSgnZ3JlZW4nKX07XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDEuNHZ3O1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgICAgICAgICAgICAgICAgICB0cmFuc2l0aW9uOiAuMXMgZWFzZS1pbi1vdXQgdHJhbnNmb3JtO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAuZGF5LXByb2dyZXNzLWNvbnRhaW5lciAuZGF5LWluZGljYXRvcjpob3ZlciB7XG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoLjkpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgRGV0YWlsc1BhbmVsOyJdfQ== */\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js */`));\n};\n\nexport default DetailsPanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/DetailsPanel.js"],"names":["getBlack","getPallete","Moment","DetailsPanel","props","months","weekdays","today","Date","turnDaysIntoArray","month","days","totalDays","daysInMonth","getFullYear","i","push","year","getDate","formatDate","date","getMonth","day","weekday","getDay","map","monthIndex"],"mappings":"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","sourcesContent":["import { getBlack, getPallete } from './../theme/colors';\nimport Moment from 'react-moment';\n\nconst DetailsPanel = props => {\n    const months = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ];\n\n    const weekdays = [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n        'Sunday'\n    ]\n\n    const today = new Date();\n\n    const turnDaysIntoArray = (month) => {\n        const days = [];\n        const totalDays = daysInMonth(month, today.getFullYear());\n        for (let i = 1; i <= totalDays; i++) {\n            days.push(i);\n        }\n        return days;\n    }\n\n    const daysInMonth = (month, year) => {\n        return new Date(year, month, 0).getDate();\n    }\n\n    const formatDate = date => {\n        let month = date.getMonth();\n        let day = date.getDate();\n        let year = date.getFullYear();\n        let weekday = date.getDay();\n        return `${weekdays[weekday]} ${day} ${months[month]} ${year}`;\n    }\n\n    return (\n        <section className=\"details-panel\">\n            <h2 className=\"dropdown-title-selector\">Months</h2>\n            <section className=\"months-container\">\n                {months.map((month, monthIndex) => {\n                    return (\n                        <section className=\"month\" key={monthIndex}>\n                            <h3 className=\"month-name\">{month}</h3>\n                            <section className=\"day-progress-container\">\n                                {turnDaysIntoArray(monthIndex).map((day) => {\n                                    return (\n                                        <section \n                                            title={formatDate(new Date(today.getFullYear(), monthIndex, day))}\n                                            className=\"day-indicator empty\"></section>\n                                    )\n                                })}\n                            </section>\n                        </section>\n                    )\n                })}\n            </section>\n            <style jsx>{`\n                .details-panel {\n                    padding: 20px;\n                    background: white;\n                    grid-area: details;\n                    border-radius: 10px;\n                    position: relative;\n                }\n                .details-panel::before {\n                    content: '';\n                    position: absolute;\n                    width: 100%;\n                    background: white;\n                    height: 30px;\n                    opacity: 1;\n                    bottom: 10px;\n                    left: 0;\n                    background: linear-gradient(rgba(0,0,0,0), white);\n                    z-index: 1;\n                }\n                .details-panel h2 {\n                    color: ${getBlack(0.8)};\n                }\n                .months-container {\n                    display: flex;\n                    justify-content: space-between;\n                    flex-wrap: wrap;\n                    overflow-y: auto;\n                    height: 95%;\n                    padding-right: 5px;\n                    margin-top: 5px;\n                }\n                .months-container::-webkit-scrollbar {\n                    background: white;\n                    border: 0;\n                    width: 5px;\n                }\n                .months-container::-webkit-scrollbar-thumb {\n                    background: lightgray;\n                    border-radius: 10px;\n                }\n                .months-container .month {\n                    width: 47%;\n                    margin-bottom: 20px;\n                }\n                .months-container .month .month-name {\n                    font-weight: 500;\n                    color: ${getBlack(.5)};\n                    border-bottom: 1px solid ${getBlack(.7)};\n                    margin-bottom: 10px;\n                }\n                .day-progress-container {\n                    display: grid;\n                    grid-template-columns: repeat(7, 7fr);\n                    grid-template-rows: repeat(5, auto);\n                    column-gap: 10px;\n                    row-gap: 5px;\n                }\n                .day-progress-container .day-indicator {\n                    background-color: ${getPallete('green')};\n                    width: 100%;\n                    height: 1.4vw;\n                    border-radius: 100px;\n                    cursor: pointer;\n                    transition: .1s ease-in-out transform;\n                }\n                .day-progress-container .day-indicator:hover {\n                    transform: scale(.9);\n                }\n            `}</style>\n        </section>\n    )\n}\n\nexport default DetailsPanel;"]},"metadata":{},"sourceType":"module"}