{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\n\nvar TaskPanel = function TaskPanel(props) {\n  // console.log(props)\n  return __jsx(\"section\", {\n    className: \"jsx-992469750\" + \" \" + \"task-panel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-992469750\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, \"What are you working on?\"), props.userTasks ? props.userTasks.map(function (task) {\n    return __jsx(\"span\", {\n      className: \"jsx-992469750\" + \" \" + \"task\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 25\n      }\n    }, task.name);\n  }) : __jsx(\"span\", {\n    className: \"jsx-992469750\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 22\n    }\n  }, \"No tasks added yet.\"), __jsx(_JSXStyle, {\n    id: \"992469750\",\n    __self: _this\n  }, \".task-panel.jsx-992469750{background-color:white;grid-area:tasks;border-radius:10px;padding:20px;}.task-panel.jsx-992469750 .task.jsx-992469750{display:inline-block;padding:3px 5px;border-radius:100px;background:slateblue;}h2.jsx-992469750{color:#2D2D2D;font-size:1rem;margin-bottom:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1Rhc2tQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFld0IsQUFHNEMsQUFNRixBQU1QLGNBQ0MsT0FOQyxFQU5BLE1BYUcsUUFOQyxFQU5ELFNBYXZCLFNBTnlCLENBTlIsYUFDakIsT0FNQSIsImZpbGUiOiIvVXNlcnMvZ3VpZG9sYXJvc2EvRG9jdW1lbnRzL1dFQkRFVi9Qcm9ncmVzc1RyYWNrZXIvY29tcG9uZW50cy9UYXNrUGFuZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuXG5jb25zdCBUYXNrUGFuZWwgPSBwcm9wcyA9PiB7XG4gICAgLy8gY29uc29sZS5sb2cocHJvcHMpXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwidGFzay1wYW5lbFwiPlxuICAgICAgICAgICAgPGgyPldoYXQgYXJlIHlvdSB3b3JraW5nIG9uPzwvaDI+XG4gICAgICAgICAgICB7cHJvcHMudXNlclRhc2tzID8gXG4gICAgICAgICAgICAgICAgcHJvcHMudXNlclRhc2tzLm1hcCh0YXNrID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInRhc2tcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7dGFzay5uYW1lfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgfSkgOiA8c3Bhbj5ObyB0YXNrcyBhZGRlZCB5ZXQuPC9zcGFuPn1cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICAudGFzay1wYW5lbCB7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICAgICAgICBncmlkLWFyZWE6IHRhc2tzO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAudGFzay1wYW5lbCAudGFzayB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogM3B4IDVweDtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHNsYXRlYmx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaDIge1xuICAgICAgICAgICAgICAgICAgICBjb2xvcjogIzJEMkQyRDtcbiAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxcmVtO1xuICAgICAgICAgICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAxMHB4O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9PC9zdHlsZT5cbiAgICAgICAgPC9zZWN0aW9uPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGFza1BhbmVsOyJdfQ== */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js */\"));\n};\n\nexport default TaskPanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TaskPanel.js"],"names":["useEffect","useState","TaskPanel","props","userTasks","map","task","name"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACvB;AACA,SACI;AAAA,uCAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEKA,KAAK,CAACC,SAAN,GACGD,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoB,UAAAC,IAAI,EAAI;AACxB,WACI;AAAA,yCAAgB,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKA,IAAI,CAACC,IADV,CADJ;AAKH,GAND,CADH,GAOQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BATb;AAAA;AAAA;AAAA,y9EADJ;AAgCH,CAlCD;;AAoCA,eAAeL,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst TaskPanel = props => {\n    // console.log(props)\n    return (\n        <section className=\"task-panel\">\n            <h2>What are you working on?</h2>\n            {props.userTasks ? \n                props.userTasks.map(task => {\n                    return (\n                        <span className=\"task\">\n                            {task.name}\n                        </span>\n                    )\n                }) : <span>No tasks added yet.</span>}\n            <style jsx>{`\n                .task-panel {\n                    background-color: white;\n                    grid-area: tasks;\n                    border-radius: 10px;\n                    padding: 20px;\n                }\n                .task-panel .task {\n                    display: inline-block;\n                    padding: 3px 5px;\n                    border-radius: 100px;\n                    background: slateblue;\n                }\n                h2 {\n                    color: #2D2D2D;\n                    font-size: 1rem;\n                    margin-bottom: 10px;\n                }\n            `}</style>\n        </section>\n    )\n}\n\nexport default TaskPanel;"]},"metadata":{},"sourceType":"module"}