{"ast":null,"code":"var _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport TaskPanel from './TaskPanel';\nimport Countdown from './Countdown';\n\nconst TimePanel = props => {\n  const {\n    0: selectedTask,\n    1: setSelectedTask\n  } = useState(props.userData.user_tasks[0].name);\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: \"jsx-3100749998\" + \" \" + \"time-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"section\", {\n    className: \"jsx-3100749998\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    className: \"jsx-3100749998\" + \" \" + \"type-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"Work\"), __jsx(\"span\", {\n    className: \"jsx-3100749998\" + \" \" + \"selected-task\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  })), __jsx(Countdown, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })), __jsx(TaskPanel, {\n    userTasks: props.userData.user_tasks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3100749998\",\n    __self: this\n  }, \".time-panel.jsx-3100749998{padding:20px;grid-area:time;background-color:#DA523E;border-radius:10px;}.time-panel.jsx-3100749998 .type-title.jsx-3100749998{color:#2D2D2D;text-align:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1RpbWVQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQndCLEFBR2tDLEFBTUMsYUFMQyxDQU1HLGNBTE8sSUFNN0IscUJBTHVCLG1CQUN2QiIsImZpbGUiOiIvVXNlcnMvZ3VpZG9sYXJvc2EvRG9jdW1lbnRzL1dFQkRFVi9Qcm9ncmVzc1RyYWNrZXIvY29tcG9uZW50cy9UaW1lUGFuZWwuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IFRhc2tQYW5lbCBmcm9tICcuL1Rhc2tQYW5lbCc7XG5pbXBvcnQgQ291bnRkb3duIGZyb20gJy4vQ291bnRkb3duJztcblxuY29uc3QgVGltZVBhbmVsID0gcHJvcHMgPT4ge1xuXG4gICAgY29uc3QgWyBzZWxlY3RlZFRhc2ssIHNldFNlbGVjdGVkVGFza10gPSB1c2VTdGF0ZShwcm9wcy51c2VyRGF0YS51c2VyX3Rhc2tzWzBdLm5hbWUpO1xuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgICA8c2VjdGlvbiBjbGFzc05hbWU9XCJ0aW1lLXBhbmVsXCI+XG4gICAgICAgICAgICAgICAgPHNlY3Rpb24+XG4gICAgICAgICAgICAgICAgICAgIDxoMiBjbGFzc05hbWU9XCJ0eXBlLXRpdGxlXCI+V29yazwvaDI+XG4gICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInNlbGVjdGVkLXRhc2tcIj48L3NwYW4+XG4gICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgICAgIDxDb3VudGRvd24gLz5cbiAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgICAgIDxUYXNrUGFuZWwgdXNlclRhc2tzPXtwcm9wcy51c2VyRGF0YS51c2VyX3Rhc2tzfS8+XG4gICAgICAgICAgICA8c3R5bGUganN4PntgXG4gICAgICAgICAgICAgICAgLnRpbWUtcGFuZWwge1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBncmlkLWFyZWE6IHRpbWU7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNEQTUyM0U7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50aW1lLXBhbmVsIC50eXBlLXRpdGxlIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6ICMyRDJEMkQ7XG4gICAgICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBgfTwvc3R5bGU+XG4gICAgICAgIDwvPlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGltZVBhbmVsOyJdfQ== */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js */\"));\n};\n\nexport default TimePanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js"],"names":["useEffect","useState","TaskPanel","Countdown","TimePanel","props","selectedTask","setSelectedTask","userData","user_tasks","name"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AAEvB,QAAM;AAAA,OAAEC,YAAF;AAAA,OAAgBC;AAAhB,MAAmCN,QAAQ,CAACI,KAAK,CAACG,QAAN,CAAeC,UAAf,CAA0B,CAA1B,EAA6BC,IAA9B,CAAjD;AACA,SACI,4BACI;AAAA,wCAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,wCAAc,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA,wCAAgB,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,EAQI,MAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,KAAK,CAACG,QAAN,CAAeC,UAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ;AAAA;AAAA;AAAA,+nEADJ;AAwBH,CA3BD;;AA6BA,eAAeL,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport TaskPanel from './TaskPanel';\nimport Countdown from './Countdown';\n\nconst TimePanel = props => {\n\n    const [ selectedTask, setSelectedTask] = useState(props.userData.user_tasks[0].name);\n    return (\n        <>\n            <section className=\"time-panel\">\n                <section>\n                    <h2 className=\"type-title\">Work</h2>\n                    <span className=\"selected-task\"></span>\n                </section>\n                <Countdown />\n            </section>\n            <TaskPanel userTasks={props.userData.user_tasks}/>\n            <style jsx>{`\n                .time-panel {\n                    padding: 20px;\n                    grid-area: time;\n                    background-color: #DA523E;\n                    border-radius: 10px;\n                }\n                .time-panel .type-title {\n                    color: #2D2D2D;\n                    text-align: center;\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default TimePanel;"]},"metadata":{},"sourceType":"module"}