{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\n\nvar Countdown = function Countdown(props) {\n  var _useState = useState({\n    minutes: 25,\n    seconds: 0\n  }),\n      timeRemaining = _useState[0],\n      setTimeRemaining = _useState[1];\n\n  var startTimer = function startTimer() {\n    var counterInterval = setInterval(function () {\n      var seconds = timeRemaining.seconds,\n          minutes = timeRemaining.minutes;\n      console.log(seconds, minutes); // console.log('counting')\n\n      if (seconds == 0) {\n        setTimeRemaining({\n          minutes: minutes,\n          seconds: 59\n        });\n      } else {\n        setTimeRemaining({\n          minutes: minutes,\n          seconds: 100\n        });\n      }\n    }, 1000);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"span\", {\n    onClick: startTimer,\n    className: \"jsx-3372631114\" + \" \" + \"countdown\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, timeRemaining.minutes, \":\", timeRemaining.seconds), __jsx(\"section\", {\n    className: \"jsx-3372631114\" + \" \" + \"countdown-controls\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"3372631114\",\n    __self: _this\n  }, \".jsx-3372631114{display:inline-block;width:100%;text-align:center;font-size:6rem;font-weight:500;}.countdown-controls.jsx-3372631114{height:50px;width:100%;border-radius:100px;background:white;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL0NvdW50ZG93bi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFxQ3dCLEFBRXNDLEFBTUwsWUFDRCxTQU5KLEVBT2EsU0FOTixXQU9HLE9BTk4sVUFPZixLQU5nQixnQkFPcEIiLCJmaWxlIjoiL1VzZXJzL2d1aWRvbGFyb3NhL0RvY3VtZW50cy9XRUJERVYvUHJvZ3Jlc3NUcmFja2VyL2NvbXBvbmVudHMvQ291bnRkb3duLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5cbmNvbnN0IENvdW50ZG93biA9IHByb3BzID0+IHtcblxuY29uc3QgWyB0aW1lUmVtYWluaW5nLCBzZXRUaW1lUmVtYWluaW5nIF0gPSB1c2VTdGF0ZSh7XG4gICAgbWludXRlczogMjUsXG4gICAgc2Vjb25kczogMFxufSlcbiAgICBjb25zdCBzdGFydFRpbWVyID0gKCkgPT4ge1xuICAgICAgICBsZXQgY291bnRlckludGVydmFsID0gc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgICAgICAgICAgbGV0IHsgc2Vjb25kcywgbWludXRlcyB9ID0gdGltZVJlbWFpbmluZztcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHNlY29uZHMsbWludXRlcyk7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZygnY291bnRpbmcnKVxuICAgICAgICAgICAgaWYgKHNlY29uZHMgPT0gMCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVSZW1haW5pbmcoe1xuICAgICAgICAgICAgICAgICAgICBtaW51dGVzOiBtaW51dGVzLFxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRzOiA1OVxuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHNldFRpbWVSZW1haW5pbmcoe1xuICAgICAgICAgICAgICAgICAgICBtaW51dGVzOiBtaW51dGVzLFxuICAgICAgICAgICAgICAgICAgICBzZWNvbmRzOiAxMDBcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfVxuICAgICAgICB9LCAxMDAwKVxuICAgIH1cbiAgICByZXR1cm4gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPHNwYW4gXG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiY291bnRkb3duXCIgXG4gICAgICAgICAgICAgICAgb25DbGljaz17c3RhcnRUaW1lcn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7dGltZVJlbWFpbmluZy5taW51dGVzfTp7dGltZVJlbWFpbmluZy5zZWNvbmRzfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiY291bnRkb3duLWNvbnRyb2xzXCI+XG5cbiAgICAgICAgICAgIDwvc2VjdGlvbj5cbiAgICAgICAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnJlbTtcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNTAwO1xuICAgICAgICAgICAgICAgIC5jb3VudGRvd24tY29udHJvbHMge1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8Lz5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IENvdW50ZG93bjsiXX0= */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js */\"));\n};\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/Countdown.js"],"names":["useState","Countdown","props","minutes","seconds","timeRemaining","setTimeRemaining","startTimer","counterInterval","setInterval","console","log"],"mappings":";;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AAAA,kBAEiBF,QAAQ,CAAC;AACjDG,IAAAA,OAAO,EAAE,EADwC;AAEjDC,IAAAA,OAAO,EAAE;AAFwC,GAAD,CAFzB;AAAA,MAEnBC,aAFmB;AAAA,MAEJC,gBAFI;;AAMvB,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAIC,eAAe,GAAGC,WAAW,CAAC,YAAM;AAAA,UAC9BL,OAD8B,GACTC,aADS,CAC9BD,OAD8B;AAAA,UACrBD,OADqB,GACTE,aADS,CACrBF,OADqB;AAEpCO,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ,EAAoBD,OAApB,EAFoC,CAGpC;;AACA,UAAIC,OAAO,IAAI,CAAf,EAAkB;AACdE,QAAAA,gBAAgB,CAAC;AACbH,UAAAA,OAAO,EAAEA,OADI;AAEbC,UAAAA,OAAO,EAAE;AAFI,SAAD,CAAhB;AAIH,OALD,MAKO;AACHE,QAAAA,gBAAgB,CAAC;AACbH,UAAAA,OAAO,EAAEA,OADI;AAEbC,UAAAA,OAAO,EAAE;AAFI,SAAD,CAAhB;AAIH;AACJ,KAfgC,EAe9B,IAf8B,CAAjC;AAgBH,GAjBD;;AAkBA,SACI,4BACI;AAEI,IAAA,OAAO,EAAEG,UAFb;AAAA,wCACc,WADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKF,aAAa,CAACF,OAJnB,OAI6BE,aAAa,CAACD,OAJ3C,CADJ,EAOI;AAAA,wCAAmB,oBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ;AAAA;AAAA;AAAA,0vFADJ;AA0BH,CAlDD;;AAoDA,eAAeH,SAAf","sourcesContent":["import { useState } from 'react';\n\nconst Countdown = props => {\n\nconst [ timeRemaining, setTimeRemaining ] = useState({\n    minutes: 25,\n    seconds: 0\n})\n    const startTimer = () => {\n        let counterInterval = setInterval(() => {\n            let { seconds, minutes } = timeRemaining;\n            console.log(seconds,minutes);\n            // console.log('counting')\n            if (seconds == 0) {\n                setTimeRemaining({\n                    minutes: minutes,\n                    seconds: 59\n                })\n            } else {\n                setTimeRemaining({\n                    minutes: minutes,\n                    seconds: 100\n                })\n            }\n        }, 1000)\n    }\n    return (\n        <>\n            <span \n                className=\"countdown\" \n                onClick={startTimer}\n            >\n                {timeRemaining.minutes}:{timeRemaining.seconds}\n            </span>\n            <section className=\"countdown-controls\">\n\n            </section>\n            <style jsx>{`\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                font-size: 6rem;\n                font-weight: 500;\n                .countdown-controls {\n                    height: 50px;\n                    width: 100%;\n                    border-radius: 100px;\n                    background: white;\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}