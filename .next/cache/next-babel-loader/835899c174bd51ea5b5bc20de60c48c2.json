{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from 'react';\nimport { getTaskColor, getPallete } from './../theme/colors';\nimport TaskPanel from './TaskPanel';\nimport Countdown from './Countdown';\nimport Log from './Log';\n\nvar TimePanel = function TimePanel(props) {\n  return __jsx(React.Fragment, null, __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"900983048\", [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent']]]) + \" \" + \"time-panel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, __jsx(\"section\", {\n    className: _JSXStyle.dynamic([[\"900983048\", [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent']]]) + \" \" + \"time-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, __jsx(\"h2\", {\n    className: _JSXStyle.dynamic([[\"900983048\", [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent']]]) + \" \" + \"type-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }\n  }, \"Work\"), props.selectedTask ? __jsx(\"span\", {\n    className: _JSXStyle.dynamic([[\"900983048\", [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent']]]) + \" \" + \"selected-task\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, props.selectedTask.name) : ''), __jsx(Countdown, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }), __jsx(Log, {\n    userTasks: props.userData.user_tasks,\n    selectedTask: props.selectedTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  })), __jsx(TaskPanel, {\n    userTasks: props.userData.user_tasks,\n    setSelectedTask: props.setSelectedTask,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), __jsx(_JSXStyle, {\n    id: \"900983048\",\n    dynamic: [getPallete('counter-background'), props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent'],\n    __self: _this\n  }, \".time-panel.__jsx-style-dynamic-selector{padding:20px;grid-area:time;background-color:\".concat(getPallete('counter-background'), \";border-radius:10px;}.time-panel.__jsx-style-dynamic-selector .time-title.__jsx-style-dynamic-selector{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;}.time-panel.__jsx-style-dynamic-selector .type-title.__jsx-style-dynamic-selector{color:white;text-align:center;}.time-panel.__jsx-style-dynamic-selector .selected-task.__jsx-style-dynamic-selector{display:inline-block;padding:5px 15px;min-width:40%;max-width:60%;text-align:center;border-radius:100px;pointer-events:none;box-shadow:0px 2px 5px black;background: \").concat(props.selectedTask ? getTaskColor(props.selectedTask.color) : 'transparent', \";}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1RpbWVQYW5lbC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QndCLEFBR2tDLEFBTUEsQUFJRCxBQUlTLFlBSEgsQ0FWSCxRQWNFLE9BYjZCLEVBVWxELFFBSWtCLGNBQ0EsY0FDSSxRQWZDLEFBSVcsVUFZVixTQWZ4QixXQWdCd0Isb0JBQ1MsNkJBRUcsb0NBZnBDLEtBZ0JBIiwiZmlsZSI6Ii9Vc2Vycy9ndWlkb2xhcm9zYS9Eb2N1bWVudHMvV0VCREVWL1Byb2dyZXNzVHJhY2tlci9jb21wb25lbnRzL1RpbWVQYW5lbC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZUVmZmVjdCwgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBnZXRUYXNrQ29sb3IsIGdldFBhbGxldGUgfSBmcm9tICcuLy4uL3RoZW1lL2NvbG9ycyc7XG5pbXBvcnQgVGFza1BhbmVsIGZyb20gJy4vVGFza1BhbmVsJztcbmltcG9ydCBDb3VudGRvd24gZnJvbSAnLi9Db3VudGRvd24nO1xuaW1wb3J0IExvZyBmcm9tICcuL0xvZyc7XG5cbmNvbnN0IFRpbWVQYW5lbCA9IHByb3BzID0+IHtcbiAgICByZXR1cm4gKFxuICAgICAgICA8PlxuICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwidGltZS1wYW5lbFwiPlxuICAgICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInRpbWUtdGl0bGVcIj5cbiAgICAgICAgICAgICAgICAgICAgPGgyIGNsYXNzTmFtZT1cInR5cGUtdGl0bGVcIj5Xb3JrPC9oMj5cbiAgICAgICAgICAgICAgICAgICAgeyBwcm9wcy5zZWxlY3RlZFRhc2sgP1xuICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwic2VsZWN0ZWQtdGFza1wiPntwcm9wcy5zZWxlY3RlZFRhc2submFtZX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICA6XG4gICAgICAgICAgICAgICAgICAgICAgICAnJ1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgPC9zZWN0aW9uPlxuICAgICAgICAgICAgICAgIDxDb3VudGRvd24gLz5cbiAgICAgICAgICAgICAgICA8TG9nIFxuICAgICAgICAgICAgICAgICAgICB1c2VyVGFza3M9e3Byb3BzLnVzZXJEYXRhLnVzZXJfdGFza3N9XG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkVGFzaz17cHJvcHMuc2VsZWN0ZWRUYXNrfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L3NlY3Rpb24+XG4gICAgICAgICAgICA8VGFza1BhbmVsIFxuICAgICAgICAgICAgICAgIHVzZXJUYXNrcz17cHJvcHMudXNlckRhdGEudXNlcl90YXNrc31cbiAgICAgICAgICAgICAgICBzZXRTZWxlY3RlZFRhc2s9e3Byb3BzLnNldFNlbGVjdGVkVGFza31cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAgIC50aW1lLXBhbmVsIHtcbiAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogMjBweDtcbiAgICAgICAgICAgICAgICAgICAgZ3JpZC1hcmVhOiB0aW1lO1xuICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAke2dldFBhbGxldGUoJ2NvdW50ZXItYmFja2dyb3VuZCcpfTtcbiAgICAgICAgICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLnRpbWUtcGFuZWwgLnRpbWUtdGl0bGUge1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50aW1lLXBhbmVsIC50eXBlLXRpdGxlIHtcbiAgICAgICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC50aW1lLXBhbmVsIC5zZWxlY3RlZC10YXNrIHtcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiA1cHggMTVweDtcbiAgICAgICAgICAgICAgICAgICAgbWluLXdpZHRoOiA0MCU7XG4gICAgICAgICAgICAgICAgICAgIG1heC13aWR0aDogNjAlO1xuICAgICAgICAgICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDEwMHB4O1xuICAgICAgICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgICAgICAgICAgICAgYm94LXNoYWRvdzogMHB4IDJweCA1cHggYmxhY2s7XG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFxuICAgICAgICAgICAgICAgICAgICAgICAgJHtwcm9wcy5zZWxlY3RlZFRhc2sgPyBcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBnZXRUYXNrQ29sb3IocHJvcHMuc2VsZWN0ZWRUYXNrLmNvbG9yKSA6XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgJ3RyYW5zcGFyZW50J307XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgYH08L3N0eWxlPlxuICAgICAgICA8Lz5cbiAgICApXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRpbWVQYW5lbDsiXX0= */\\n/*@ sourceURL=/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js */\")));\n};\n\nexport default TimePanel;","map":{"version":3,"sources":["/Users/guidolarosa/Documents/WEBDEV/ProgressTracker/components/TimePanel.js"],"names":["useEffect","useState","getTaskColor","getPallete","TaskPanel","Countdown","Log","TimePanel","props","selectedTask","color","name","userData","user_tasks","setSelectedTask"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,YAAT,EAAuBC,UAAvB,QAAyC,mBAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK,EAAI;AACvB,SACI,4BACI;AAAA,iDAuB4BL,UAAU,CAAC,oBAAD,CAvBtC,EA4CcK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA9ChB,aAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,iDAsBwBP,UAAU,CAAC,oBAAD,CAtBlC,EA2CUK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA7CZ,aAAmB,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA,iDAqBoBP,UAAU,CAAC,oBAAD,CArB9B,EA0CMK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA5CR,aAAc,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEMF,KAAK,CAACC,YAAN,GACE;AAAA,iDAmBgBN,UAAU,CAAC,oBAAD,CAnB1B,EAwCEK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA1CJ,aAAgB,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCF,KAAK,CAACC,YAAN,CAAmBE,IAApD,CADF,GAGE,EALR,CADJ,EASI,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,MAAC,GAAD;AACI,IAAA,SAAS,EAAEH,KAAK,CAACI,QAAN,CAAeC,UAD9B;AAEI,IAAA,YAAY,EAAEL,KAAK,CAACC,YAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,CADJ,EAgBI,MAAC,SAAD;AACI,IAAA,SAAS,EAAED,KAAK,CAACI,QAAN,CAAeC,UAD9B;AAEI,IAAA,eAAe,EAAEL,KAAK,CAACM,eAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBJ;AAAA;AAAA,cAwBgCX,UAAU,CAAC,oBAAD,CAxB1C,EA6CkBK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA/CpB;AAAA;AAAA,qGAwBgCP,UAAU,CAAC,oBAAD,CAxB1C,6pBA6CkBK,KAAK,CAACC,YAAN,GACEP,YAAY,CAACM,KAAK,CAACC,YAAN,CAAmBC,KAApB,CADd,GAEE,aA/CpB,gmHADJ;AAqDH,CAtDD;;AAwDA,eAAeH,SAAf","sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTaskColor, getPallete } from './../theme/colors';\nimport TaskPanel from './TaskPanel';\nimport Countdown from './Countdown';\nimport Log from './Log';\n\nconst TimePanel = props => {\n    return (\n        <>\n            <section className=\"time-panel\">\n                <section className=\"time-title\">\n                    <h2 className=\"type-title\">Work</h2>\n                    { props.selectedTask ?\n                        <span className=\"selected-task\">{props.selectedTask.name}</span>\n                        :\n                        ''\n                    }\n                </section>\n                <Countdown />\n                <Log \n                    userTasks={props.userData.user_tasks}\n                    selectedTask={props.selectedTask}\n                />\n            </section>\n            <TaskPanel \n                userTasks={props.userData.user_tasks}\n                setSelectedTask={props.setSelectedTask}\n                />\n            <style jsx>{`\n                .time-panel {\n                    padding: 20px;\n                    grid-area: time;\n                    background-color: ${getPallete('counter-background')};\n                    border-radius: 10px;\n                }\n                .time-panel .time-title {\n                    display: flex;\n                    justify-content: space-between;\n                }\n                .time-panel .type-title {\n                    color: white;\n                    text-align: center;\n                }\n                .time-panel .selected-task {\n                    display: inline-block;\n                    padding: 5px 15px;\n                    min-width: 40%;\n                    max-width: 60%;\n                    text-align: center;\n                    border-radius: 100px;\n                    pointer-events: none;\n                    box-shadow: 0px 2px 5px black;\n                    background: \n                        ${props.selectedTask ? \n                            getTaskColor(props.selectedTask.color) :\n                            'transparent'};\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default TimePanel;"]},"metadata":{},"sourceType":"module"}