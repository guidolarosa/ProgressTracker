{"version":3,"file":"static/webpack/static/development/pages/index.js.9fdb58756cb4a2f965c4.hot-update.js","sources":["webpack:///./components/Countdown.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst Countdown = props => {\n\n    const [ timeRemaining, setTimeRemaining ] = useState({\n        minutes: 25,\n        seconds: 0\n    });\n\n    const startTimer = () => {\n        let counterInterval = setInterval(() => {\n            let { seconds, minutes } = timeRemaining;\n            if (seconds == 0) {\n                setTimeRemaining({\n                    minutes: minutes,\n                    seconds: 59\n                })\n            } else {\n                setTimeRemaining({\n                    minutes: minutes,\n                    seconds: seconds--\n                })\n            }\n        }, 1000)\n    };\n\n    useEffect(() => {\n        console.log(timeRemaining);\n    },[timeRemaining])\n\n    return (\n        <>\n            <span \n                className=\"countdown\" \n                onClick={startTimer}\n            >\n                {timeRemaining.minutes}:{timeRemaining.seconds}\n            </span>\n            <section className=\"countdown-controls\">\n\n            </section>\n            <style jsx>{`\n                display: inline-block;\n                width: 100%;\n                text-align: center;\n                font-size: 6rem;\n                font-weight: 500;\n                .countdown-controls {\n                    height: 50px;\n                    width: 100%;\n                    border-radius: 100px;\n                    background: white;\n                }\n            `}</style>\n        </>\n    )\n}\n\nexport default Countdown;"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAAA;AAGA;AACA;AAFA;AAFA;AAAA;AACA;AAMA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AAAA;AAAA;AAyBA;AACA;AACA;;;;A","sourceRoot":""}